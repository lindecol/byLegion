//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IUProdPack.WsProdPack {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsProdPack.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsEtiquetasLote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsEtiquetasLote(string Usuario, string Password, string NomConexion, string _Lote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsEtiquetasLote", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsEtiquetasLoteAsync(string Usuario, string Password, string NomConexion, string _Lote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsEtiquetaLoteCx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsEtiquetaLoteCx(string Usuario, string Password, string NomConexion, string _Lote, string _NoCx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsEtiquetaLoteCx", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsEtiquetaLoteCxAsync(string Usuario, string Password, string NomConexion, string _Lote, string _NoCx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizaAudStockEtq", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ActualizaAudStockEtq(string Usuario, string Password, string NomConexion, int _Agencia, string _Lote, string _CodLegajo, int _NumEtiquetas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizaAudStockEtq", ReplyAction="*")]
        System.Threading.Tasks.Task ActualizaAudStockEtqAsync(string Usuario, string Password, string NomConexion, int _Agencia, string _Lote, string _CodLegajo, int _NumEtiquetas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsLotesaTransferirFecha", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsLotesaTransferirFecha(string Usuario, string Password, string NomConexion, System.DateTime p_fechaini, System.DateTime p_fechafin, string _Agencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsLotesaTransferirFecha", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsLotesaTransferirFechaAsync(string Usuario, string Password, string NomConexion, System.DateTime p_fechaini, System.DateTime p_fechafin, string _Agencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsLotesaTransferirLote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsLotesaTransferirLote(string Usuario, string Password, string NomConexion, string _Lote, string _Agencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsLotesaTransferirLote", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsLotesaTransferirLoteAsync(string Usuario, string Password, string NomConexion, string _Lote, string _Agencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferirLote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int TransferirLote(string Usuario, string Password, string NomConexion, string P_LOTE, int P_IDEMP, int P_IDGRUPO, string P_AGENCIA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferirLote", ReplyAction="*")]
        System.Threading.Tasks.Task<int> TransferirLoteAsync(string Usuario, string Password, string NomConexion, string P_LOTE, int P_IDEMP, int P_IDGRUPO, string P_AGENCIA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerarLote", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GenerarLote(
                    string Usuario, 
                    string Password, 
                    string NomConexion, 
                    int pGrpecid, 
                    int pEmpid, 
                    string pAgencia, 
                    System.DateTime pFechaLote, 
                    string pTipoGas, 
                    int pSubdeposito, 
                    string p_COD_GAS, 
                    double P_VACIO1, 
                    double P_VACIO2, 
                    double P_VACIO3, 
                    string P_BOM_HORA_I, 
                    string P_BOM_HORA_F, 
                    string P_RACK, 
                    double P_PRESION_F, 
                    double P_TEMPERAT_F, 
                    string P_TEST_OLOR, 
                    double P_PUREZA, 
                    string P_USU_MOV, 
                    int P_CO, 
                    int P_CO2, 
                    string P_CUMPLE, 
                    string P_LEGAJO, 
                    string P_USU_CLASIFICADOR, 
                    System.DateTime P_FECHA_CLASIFICACION, 
                    int P_CARGA_INICIAL, 
                    int P_ID_TRANSACCION);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerarLote", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GenerarLoteAsync(
                    string Usuario, 
                    string Password, 
                    string NomConexion, 
                    int pGrpecid, 
                    int pEmpid, 
                    string pAgencia, 
                    System.DateTime pFechaLote, 
                    string pTipoGas, 
                    int pSubdeposito, 
                    string p_COD_GAS, 
                    double P_VACIO1, 
                    double P_VACIO2, 
                    double P_VACIO3, 
                    string P_BOM_HORA_I, 
                    string P_BOM_HORA_F, 
                    string P_RACK, 
                    double P_PRESION_F, 
                    double P_TEMPERAT_F, 
                    string P_TEST_OLOR, 
                    double P_PUREZA, 
                    string P_USU_MOV, 
                    int P_CO, 
                    int P_CO2, 
                    string P_CUMPLE, 
                    string P_LEGAJO, 
                    string P_USU_CLASIFICADOR, 
                    System.DateTime P_FECHA_CLASIFICACION, 
                    int P_CARGA_INICIAL, 
                    int P_ID_TRANSACCION);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DETALLE_LOTE_INS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DETALLE_LOTE_INS(string Usuario, string Password, string NomConexion, int N_TRANSACCION, string STR_PRODUCTO, double N_CAPACIDAD, int N_PROPIEDAD, int N_CANTIDAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DETALLE_LOTE_INS", ReplyAction="*")]
        System.Threading.Tasks.Task DETALLE_LOTE_INSAsync(string Usuario, string Password, string NomConexion, int N_TRANSACCION, string STR_PRODUCTO, double N_CAPACIDAD, int N_PROPIEDAD, int N_CANTIDAD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DETALLE_LOTE_COMPOS_INS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DETALLE_LOTE_COMPOS_INS(string Usuario, string Password, string NomConexion, int N_TRANSACCION, string STR_PRODUCTO, double N_CAPACIDAD, int N_PROPIEDAD, double N_CANTIDAD, int N_SUBDEPOSITO, string STR_TANQUE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DETALLE_LOTE_COMPOS_INS", ReplyAction="*")]
        System.Threading.Tasks.Task DETALLE_LOTE_COMPOS_INSAsync(string Usuario, string Password, string NomConexion, int N_TRANSACCION, string STR_PRODUCTO, double N_CAPACIDAD, int N_PROPIEDAD, double N_CANTIDAD, int N_SUBDEPOSITO, string STR_TANQUE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/id_Transaccion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int id_Transaccion(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/id_Transaccion", ReplyAction="*")]
        System.Threading.Tasks.Task<int> id_TransaccionAsync(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DEL_DATOS_TMP_LOTE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DEL_DATOS_TMP_LOTE(string Usuario, string Password, string NomConexion, int N_TRANSACCION);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DEL_DATOS_TMP_LOTE", ReplyAction="*")]
        System.Threading.Tasks.Task DEL_DATOS_TMP_LOTEAsync(string Usuario, string Password, string NomConexion, int N_TRANSACCION);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NivelesAbiertos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int NivelesAbiertos(string Usuario, string Password, string NomConexion, string pAgencia, string pLote, string pTurno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NivelesAbiertos", ReplyAction="*")]
        System.Threading.Tasks.Task<int> NivelesAbiertosAsync(string Usuario, string Password, string NomConexion, string pAgencia, string pLote, string pTurno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TNQ_FS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_TNQ_FS(string Usuario, string Password, string NomConexion, int SucUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TNQ_FS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_TNQ_FSAsync(string Usuario, string Password, string NomConexion, int SucUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TNQ_DESCARGA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_TNQ_DESCARGA(string Usuario, string Password, string NomConexion, int SucUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TNQ_DESCARGA", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_TNQ_DESCARGAAsync(string Usuario, string Password, string NomConexion, int SucUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TRANSAC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GET_TRANSAC(string Usuario, string Password, string NomConexion, string P_PROCESO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TRANSAC", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GET_TRANSACAsync(string Usuario, string Password, string NomConexion, string P_PROCESO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TIPO_TRANSAC", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_TIPO_TRANSAC(string Usuario, string Password, string NomConexion, int P_EMPRESA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TIPO_TRANSAC", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_TIPO_TRANSACAsync(string Usuario, string Password, string NomConexion, int P_EMPRESA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GRABA_TRANS_TNQ_DESCARGA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GRABA_TRANS_TNQ_DESCARGA(string Usuario, string Password, string NomConexion, int P_TANQUE_CARGA, int P_TANQUE_DESCARGA, int P_TIPO_TRANSAC, string P_OBSERVACIONES, int P_TIPO_ENTREGA, double P_PI_DESCARGA, double P_PF_DESCARGA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GRABA_TRANS_TNQ_DESCARGA", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GRABA_TRANS_TNQ_DESCARGAAsync(string Usuario, string Password, string NomConexion, int P_TANQUE_CARGA, int P_TANQUE_DESCARGA, int P_TIPO_TRANSAC, string P_OBSERVACIONES, int P_TIPO_ENTREGA, double P_PI_DESCARGA, double P_PF_DESCARGA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TANQUES_BYID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_TANQUES_BYID(string Usuario, string Password, string NomConexion, int P_TANQUE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TANQUES_BYID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_TANQUES_BYIDAsync(string Usuario, string Password, string NomConexion, int P_TANQUE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_COEF_PROD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_COEF_PROD(string Usuario, string Password, string NomConexion, string P_PRODUCTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_COEF_PROD", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_COEF_PRODAsync(string Usuario, string Password, string NomConexion, string P_PRODUCTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_CONSTIPENTREGA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_CONSTIPENTREGA(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_CONSTIPENTREGA", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_CONSTIPENTREGAAsync(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TIPO_ACTIVO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_TIPO_ACTIVO(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TIPO_ACTIVO", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_TIPO_ACTIVOAsync(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TIPO_ACTIVO_HAB", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_TIPO_ACTIVO_HAB(string Usuario, string Password, string NomConexion, int P_TIPO_REQUISITO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TIPO_ACTIVO_HAB", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_TIPO_ACTIVO_HABAsync(string Usuario, string Password, string NomConexion, int P_TIPO_REQUISITO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INSERT_TIPO_ACTIVO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool INSERT_TIPO_ACTIVO(string Usuario, string Password, string NomConexion, string P_DESCRIPCION);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INSERT_TIPO_ACTIVO", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> INSERT_TIPO_ACTIVOAsync(string Usuario, string Password, string NomConexion, string P_DESCRIPCION);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UPDATE_TIPO_ACTIVO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UPDATE_TIPO_ACTIVO(string Usuario, string Password, string NomConexion, string P_DESCRIPCION, int P_ID_TIPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UPDATE_TIPO_ACTIVO", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UPDATE_TIPO_ACTIVOAsync(string Usuario, string Password, string NomConexion, string P_DESCRIPCION, int P_ID_TIPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DELETE_TIPO_ACTIVO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DELETE_TIPO_ACTIVO(string Usuario, string Password, string NomConexion, int P_ID_TIPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DELETE_TIPO_ACTIVO", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DELETE_TIPO_ACTIVOAsync(string Usuario, string Password, string NomConexion, int P_ID_TIPO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_REQ_LLEN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_REQ_LLEN(string Usuario, string Password, string NomConexion, int P_TIPO_ACTIVO, int P_TIPO_REQUISITO, string P_DESCRIPCION);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_REQ_LLEN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_REQ_LLENAsync(string Usuario, string Password, string NomConexion, int P_TIPO_ACTIVO, int P_TIPO_REQUISITO, string P_DESCRIPCION);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INSERT_REQ_LLEN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string INSERT_REQ_LLEN(string Usuario, string Password, string NomConexion, string P_DESCRIPCION, int P_TIPO_REQUISITO, int P_TIPO_ACTIVO, int P_ESTADO, int P_CANT_PREGUNTAS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INSERT_REQ_LLEN", ReplyAction="*")]
        System.Threading.Tasks.Task<string> INSERT_REQ_LLENAsync(string Usuario, string Password, string NomConexion, string P_DESCRIPCION, int P_TIPO_REQUISITO, int P_TIPO_ACTIVO, int P_ESTADO, int P_CANT_PREGUNTAS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UPDATE_REQ_LLEN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UPDATE_REQ_LLEN(string Usuario, string Password, string NomConexion, string P_DESCRIPCION, int P_TIPO_REQUISITO, int P_TIPO_ACTIVO, int P_ESTADO, int P_CANT_PREGUNTAS, int P_ID_REQUISITO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UPDATE_REQ_LLEN", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UPDATE_REQ_LLENAsync(string Usuario, string Password, string NomConexion, string P_DESCRIPCION, int P_TIPO_REQUISITO, int P_TIPO_ACTIVO, int P_ESTADO, int P_CANT_PREGUNTAS, int P_ID_REQUISITO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TIPO_REQ", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_TIPO_REQ(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TIPO_REQ", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_TIPO_REQAsync(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TIPO_RESPUESTAS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_TIPO_RESPUESTAS(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_TIPO_RESPUESTAS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_TIPO_RESPUESTASAsync(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_DET_REQ_LLEN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_DET_REQ_LLEN(string Usuario, string Password, string NomConexion, int P_ID_REQUISITO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_DET_REQ_LLEN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_DET_REQ_LLENAsync(string Usuario, string Password, string NomConexion, int P_ID_REQUISITO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_DET_REQ_LLEN_BYID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_DET_REQ_LLEN_BYID(string Usuario, string Password, string NomConexion, int P_ID_DETALLE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_DET_REQ_LLEN_BYID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_DET_REQ_LLEN_BYIDAsync(string Usuario, string Password, string NomConexion, int P_ID_DETALLE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INSERT_DET_REQ_LLEN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string INSERT_DET_REQ_LLEN(string Usuario, string Password, string NomConexion, int P_ID_REQUISITO, string P_DESCRIPCION, int P_SN_OBLIGA, int P_ID_RESPUESTA, int P_ORDEN, int P_ESTADO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INSERT_DET_REQ_LLEN", ReplyAction="*")]
        System.Threading.Tasks.Task<string> INSERT_DET_REQ_LLENAsync(string Usuario, string Password, string NomConexion, int P_ID_REQUISITO, string P_DESCRIPCION, int P_SN_OBLIGA, int P_ID_RESPUESTA, int P_ORDEN, int P_ESTADO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UPDATE_DET_REQ_LLEN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UPDATE_DET_REQ_LLEN(string Usuario, string Password, string NomConexion, int P_ID_REQUISITO, string P_DESCRIPCION, int P_SN_OBLIGA, int P_ID_RESPUESTA, int P_ORDEN, int P_ESTADO, int P_ID_DETALLE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UPDATE_DET_REQ_LLEN", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UPDATE_DET_REQ_LLENAsync(string Usuario, string Password, string NomConexion, int P_ID_REQUISITO, string P_DESCRIPCION, int P_SN_OBLIGA, int P_ID_RESPUESTA, int P_ORDEN, int P_ESTADO, int P_ID_DETALLE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_RES_LLEN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_RES_LLEN(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_RES_LLEN", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_RES_LLENAsync(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_RES_LLEN_BYID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_RES_LLEN_BYID(string Usuario, string Password, string NomConexion, int P_ID_RESPUESTA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_RES_LLEN_BYID", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_RES_LLEN_BYIDAsync(string Usuario, string Password, string NomConexion, int P_ID_RESPUESTA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_RES_LLEN_BYTIPO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_RES_LLEN_BYTIPO(string Usuario, string Password, string NomConexion, int P_TIPO_RESPUESTA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_RES_LLEN_BYTIPO", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_RES_LLEN_BYTIPOAsync(string Usuario, string Password, string NomConexion, int P_TIPO_RESPUESTA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INSERT_RES_LLEN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string INSERT_RES_LLEN(string Usuario, string Password, string NomConexion, int P_TIPO_RESPUESTA, string P_VALORES, string P_VALOR_DEFECTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INSERT_RES_LLEN", ReplyAction="*")]
        System.Threading.Tasks.Task<string> INSERT_RES_LLENAsync(string Usuario, string Password, string NomConexion, int P_TIPO_RESPUESTA, string P_VALORES, string P_VALOR_DEFECTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UPDATE_RES_LLEN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UPDATE_RES_LLEN(string Usuario, string Password, string NomConexion, int P_TIPO_RESPUESTA, string P_VALORES, string P_VALOR_DEFECTO, int P_ID_RESPUESTA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UPDATE_RES_LLEN", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UPDATE_RES_LLENAsync(string Usuario, string Password, string NomConexion, int P_TIPO_RESPUESTA, string P_VALORES, string P_VALOR_DEFECTO, int P_ID_RESPUESTA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DELETE_RES_LLEN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DELETE_RES_LLEN(string Usuario, string Password, string NomConexion, int P_ID_RESPUESTA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DELETE_RES_LLEN", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DELETE_RES_LLENAsync(string Usuario, string Password, string NomConexion, int P_ID_RESPUESTA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_ESTADO_RACK", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_ESTADO_RACK(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_ESTADO_RACK", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_ESTADO_RACKAsync(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_RACKS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_RACKS(string Usuario, string Password, string NomConexion, int P_EMP_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_RACKS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_RACKSAsync(string Usuario, string Password, string NomConexion, int P_EMP_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INSERT_RACKS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool INSERT_RACKS(string Usuario, string Password, string NomConexion, int P_N_ESTADO, string P_C_AGENCI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INSERT_RACKS", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> INSERT_RACKSAsync(string Usuario, string Password, string NomConexion, int P_N_ESTADO, string P_C_AGENCI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UPDATE_RACKS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UPDATE_RACKS(string Usuario, string Password, string NomConexion, int P_N_ESTADO, int P_N_NUMRACK);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UPDATE_RACKS", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UPDATE_RACKSAsync(string Usuario, string Password, string NomConexion, int P_N_ESTADO, int P_N_NUMRACK);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_SUCURSALES", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_SUCURSALES(string Usuario, string Password, string NomConexion, int P_EMPID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_SUCURSALES", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_SUCURSALESAsync(string Usuario, string Password, string NomConexion, int P_EMPID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_SERIALESEVALUADOS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_SERIALESEVALUADOS(string Usuario, string Password, string NomConexion, string P_PRODUCTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_SERIALESEVALUADOS", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_SERIALESEVALUADOSAsync(string Usuario, string Password, string NomConexion, string P_PRODUCTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_SERIALESEVALUADOSLOTE", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_SERIALESEVALUADOSLOTE(string Usuario, string Password, string NomConexion, string plote, string pProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_SERIALESEVALUADOSLOTE", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_SERIALESEVALUADOSLOTEAsync(string Usuario, string Password, string NomConexion, string plote, string pProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RECLASIFICA_SERIAL_INS", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RECLASIFICA_SERIAL_INS(string Usuario, string Password, string NomConexion, string plote, int pSerial, int pReclasifica, int pVentea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RECLASIFICA_SERIAL_INS", ReplyAction="*")]
        System.Threading.Tasks.Task RECLASIFICA_SERIAL_INSAsync(string Usuario, string Password, string NomConexion, string plote, int pSerial, int pReclasifica, int pVentea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RECLASIFICA_SERIAL_DEL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RECLASIFICA_SERIAL_DEL(string Usuario, string Password, string NomConexion, string plote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RECLASIFICA_SERIAL_DEL", ReplyAction="*")]
        System.Threading.Tasks.Task RECLASIFICA_SERIAL_DELAsync(string Usuario, string Password, string NomConexion, string plote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_DETALLE_EVA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_DETALLE_EVA(string Usuario, string Password, string NomConexion, int P_ID_EVALUACION);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_DETALLE_EVA", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_DETALLE_EVAAsync(string Usuario, string Password, string NomConexion, int P_ID_EVALUACION);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RECLASIFICA_SERIAL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RECLASIFICA_SERIAL(string Usuario, string Password, string NomConexion, string P_NEW_PROD, string pLote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RECLASIFICA_SERIAL", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RECLASIFICA_SERIALAsync(string Usuario, string Password, string NomConexion, string P_NEW_PROD, string pLote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_PRODUCTOS_RECLA", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_PRODUCTOS_RECLA(string Usuario, string Password, string NomConexion, string P_PRODUCTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_PRODUCTOS_RECLA", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_PRODUCTOS_RECLAAsync(string Usuario, string Password, string NomConexion, string P_PRODUCTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_PRODUCTOS_FILTRO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GET_PRODUCTOS_FILTRO(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GET_PRODUCTOS_FILTRO", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GET_PRODUCTOS_FILTROAsync(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsSubdeposito", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsSubdeposito(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia, string _Marca, int _IdUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsSubdeposito", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsSubdepositoAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia, string _Marca, int _IdUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarTurno", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BuscarTurno(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuscarTurno", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarTurnoAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsUnidadMed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsUnidadMed(string Usuario, string Password, string NomConexion, int _Empresa, string _Producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsUnidadMed", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsUnidadMedAsync(string Usuario, string Password, string NomConexion, int _Empresa, string _Producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsStockeables", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsStockeables(string Usuario, string Password, string NomConexion, int _Empresa, int _Tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsStockeables", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsStockeablesAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsGases", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsGases(string Usuario, string Password, string NomConexion, int _Agencia, int _Tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsGases", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsGasesAsync(string Usuario, string Password, string NomConexion, int _Agencia, int _Tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsClasificador", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsClasificador(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsClasificador", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsClasificadorAsync(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsRacks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsRacks(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsRacks", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsRacksAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsTipPrdMedicinal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsTipPrdMedicinal(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsTipPrdMedicinal", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsTipPrdMedicinalAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsPrimerVacio", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsPrimerVacio(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia, string _Producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsPrimerVacio", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsPrimerVacioAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia, string _Producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsProductInsumLastro", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsProductInsumLastro(string Usuario, string Password, string NomConexion, int _Agencia, string _Producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsProductInsumLastro", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsProductInsumLastroAsync(string Usuario, string Password, string NomConexion, int _Agencia, string _Producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarCapacidades", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarCapacidades(string Usuario, string Password, string NomConexion, string _capacidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarCapacidades", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarCapacidadesAsync(string Usuario, string Password, string NomConexion, string _capacidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarCapacidadesPrd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarCapacidadesPrd(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarCapacidadesPrd", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarCapacidadesPrdAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Producto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaTermoPrax", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaTermoPrax(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaTermoPrax", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaTermoPraxAsync(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaTermoPart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaTermoPart(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaTermoPart", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaTermoPartAsync(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaTanque", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaTanque(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia, string _Producto, int _Tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaTanque", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaTanqueAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia, string _Producto, int _Tipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaTanqueDisp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaTanqueDisp(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia, string _Producto, string _codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaTanqueDisp", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaTanqueDispAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia, string _Producto, string _codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaStockDisp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaStockDisp(string Usuario, string Password, string NomConexion, int _Empresa, string _codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaStockDisp", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaStockDispAsync(string Usuario, string Password, string NomConexion, int _Empresa, string _codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarStockSucursal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarStockSucursal(string Usuario, string Password, string NomConexion, int _Grupo, int _Empresa, string _CodSubdeposito, string _idnumarticulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarStockSucursal", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarStockSucursalAsync(string Usuario, string Password, string NomConexion, int _Grupo, int _Empresa, string _CodSubdeposito, string _idnumarticulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarStockTanque", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarStockTanque(string Usuario, string Password, string NomConexion, string _tanque);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarStockTanque", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarStockTanqueAsync(string Usuario, string Password, string NomConexion, string _tanque);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarArtIdNum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarArtIdNum(string Usuario, string Password, string NomConexion, int _Empresa, string _Codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarArtIdNum", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarArtIdNumAsync(string Usuario, string Password, string NomConexion, int _Empresa, string _Codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarCodPrd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarCodPrd(string Usuario, string Password, string NomConexion, int _Empresa, string _Codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarCodPrd", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarCodPrdAsync(string Usuario, string Password, string NomConexion, int _Empresa, string _Codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaUsaTanque", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaUsaTanque(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaUsaTanque", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaUsaTanqueAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarInsumosPrd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarInsumosPrd(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia, string _Codproducto, int _Sustituto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarInsumosPrd", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarInsumosPrdAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia, string _Codproducto, int _Sustituto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaLegajo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaLegajo(string Usuario, string Password, string NomConexion, string _IdUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaLegajo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaLegajoAsync(string Usuario, string Password, string NomConexion, string _IdUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaNombreUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaNombreUsuario(string Usuario, string Password, string NomConexion, string _IdUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaNombreUsuario", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaNombreUsuarioAsync(string Usuario, string Password, string NomConexion, string _IdUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaNombreArticulo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaNombreArticulo(string Usuario, string Password, string NomConexion, int _Empresa, string _Codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaNombreArticulo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaNombreArticuloAsync(string Usuario, string Password, string NomConexion, int _Empresa, string _Codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaNombreDirTecnico", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaNombreDirTecnico(string Usuario, string Password, string NomConexion, int _Agencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaNombreDirTecnico", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaNombreDirTecnicoAsync(string Usuario, string Password, string NomConexion, int _Agencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaUsuHab", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaUsuHab(string Usuario, string Password, string NomConexion, string _Aplicacion, string _Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaUsuHab", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaUsuHabAsync(string Usuario, string Password, string NomConexion, string _Aplicacion, string _Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaNombreLegajo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaNombreLegajo(string Usuario, string Password, string NomConexion, string _Legajo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaNombreLegajo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaNombreLegajoAsync(string Usuario, string Password, string NomConexion, string _Legajo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidaProductoEnCuarentena", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ValidaProductoEnCuarentena(string Usuario, string Password, string NomConexion, string _Codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidaProductoEnCuarentena", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ValidaProductoEnCuarentenaAsync(string Usuario, string Password, string NomConexion, string _Codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaAnalisisGM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaAnalisisGM(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaAnalisisGM", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaAnalisisGMAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaLastroInsumos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaLastroInsumos(string Usuario, string Password, string NomConexion, int _Empresa, string _Subdeposito, int _Agencia, string _Codproducto, int _Grupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaLastroInsumos", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaLastroInsumosAsync(string Usuario, string Password, string NomConexion, int _Empresa, string _Subdeposito, int _Agencia, string _Codproducto, int _Grupo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaSecuencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaSecuencia(string Usuario, string Password, string NomConexion, string _Secuencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaSecuencia", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaSecuenciaAsync(string Usuario, string Password, string NomConexion, string _Secuencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaDatSecuencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultaDatSecuencia(string Usuario, string Password, string NomConexion, string _Secuencia, string _Codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultaDatSecuencia", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultaDatSecuenciaAsync(string Usuario, string Password, string NomConexion, string _Secuencia, string _Codproducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarComprobante", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarComprobante(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarComprobante", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarComprobanteAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarNoComprobante", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarNoComprobante(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarNoComprobante", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarNoComprobanteAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GrabarSecuencias", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool GrabarSecuencias(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia, string _Comprabante, System.Data.DataTable _dtParticular);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GrabarSecuencias", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> GrabarSecuenciasAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia, string _Comprabante, System.Data.DataTable _dtParticular);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LongitudTubo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LongitudTubo(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LongitudTubo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LongitudTuboAsync(string Usuario, string Password, string NomConexion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsExisteCx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsExisteCx(string Usuario, string Password, string NomConexion, string _Lote, string _NoCx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsExisteCx", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsExisteCxAsync(string Usuario, string Password, string NomConexion, string _Lote, string _NoCx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsNombreLegajo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsNombreLegajo(string Usuario, string Password, string NomConexion, string _CodLegajo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsNombreLegajo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsNombreLegajoAsync(string Usuario, string Password, string NomConexion, string _CodLegajo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LegajoValido", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LegajoValido(string Usuario, string Password, string NomConexion, string _Aplicacion, string _CodLegajo, string _Contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LegajoValido", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> LegajoValidoAsync(string Usuario, string Password, string NomConexion, string _Aplicacion, string _CodLegajo, string _Contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsEtiquetasAjenos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsEtiquetasAjenos(string Usuario, string Password, string NomConexion, string _Lote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsEtiquetasAjenos", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsEtiquetasAjenosAsync(string Usuario, string Password, string NomConexion, string _Lote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsEtiquetaAjenoCx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsEtiquetaAjenoCx(string Usuario, string Password, string NomConexion, string _Lote, string _NoCx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsEtiquetaAjenoCx", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsEtiquetaAjenoCxAsync(string Usuario, string Password, string NomConexion, string _Lote, string _NoCx);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : IUProdPack.WsProdPack.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<IUProdPack.WsProdPack.ServiceSoap>, IUProdPack.WsProdPack.ServiceSoap {
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet ConsEtiquetasLote(string Usuario, string Password, string NomConexion, string _Lote) {
            return base.Channel.ConsEtiquetasLote(Usuario, Password, NomConexion, _Lote);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsEtiquetasLoteAsync(string Usuario, string Password, string NomConexion, string _Lote) {
            return base.Channel.ConsEtiquetasLoteAsync(Usuario, Password, NomConexion, _Lote);
        }
        
        public System.Data.DataSet ConsEtiquetaLoteCx(string Usuario, string Password, string NomConexion, string _Lote, string _NoCx) {
            return base.Channel.ConsEtiquetaLoteCx(Usuario, Password, NomConexion, _Lote, _NoCx);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsEtiquetaLoteCxAsync(string Usuario, string Password, string NomConexion, string _Lote, string _NoCx) {
            return base.Channel.ConsEtiquetaLoteCxAsync(Usuario, Password, NomConexion, _Lote, _NoCx);
        }
        
        public void ActualizaAudStockEtq(string Usuario, string Password, string NomConexion, int _Agencia, string _Lote, string _CodLegajo, int _NumEtiquetas) {
            base.Channel.ActualizaAudStockEtq(Usuario, Password, NomConexion, _Agencia, _Lote, _CodLegajo, _NumEtiquetas);
        }
        
        public System.Threading.Tasks.Task ActualizaAudStockEtqAsync(string Usuario, string Password, string NomConexion, int _Agencia, string _Lote, string _CodLegajo, int _NumEtiquetas) {
            return base.Channel.ActualizaAudStockEtqAsync(Usuario, Password, NomConexion, _Agencia, _Lote, _CodLegajo, _NumEtiquetas);
        }
        
        public System.Data.DataSet ConsLotesaTransferirFecha(string Usuario, string Password, string NomConexion, System.DateTime p_fechaini, System.DateTime p_fechafin, string _Agencia) {
            return base.Channel.ConsLotesaTransferirFecha(Usuario, Password, NomConexion, p_fechaini, p_fechafin, _Agencia);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsLotesaTransferirFechaAsync(string Usuario, string Password, string NomConexion, System.DateTime p_fechaini, System.DateTime p_fechafin, string _Agencia) {
            return base.Channel.ConsLotesaTransferirFechaAsync(Usuario, Password, NomConexion, p_fechaini, p_fechafin, _Agencia);
        }
        
        public System.Data.DataSet ConsLotesaTransferirLote(string Usuario, string Password, string NomConexion, string _Lote, string _Agencia) {
            return base.Channel.ConsLotesaTransferirLote(Usuario, Password, NomConexion, _Lote, _Agencia);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsLotesaTransferirLoteAsync(string Usuario, string Password, string NomConexion, string _Lote, string _Agencia) {
            return base.Channel.ConsLotesaTransferirLoteAsync(Usuario, Password, NomConexion, _Lote, _Agencia);
        }
        
        public int TransferirLote(string Usuario, string Password, string NomConexion, string P_LOTE, int P_IDEMP, int P_IDGRUPO, string P_AGENCIA) {
            return base.Channel.TransferirLote(Usuario, Password, NomConexion, P_LOTE, P_IDEMP, P_IDGRUPO, P_AGENCIA);
        }
        
        public System.Threading.Tasks.Task<int> TransferirLoteAsync(string Usuario, string Password, string NomConexion, string P_LOTE, int P_IDEMP, int P_IDGRUPO, string P_AGENCIA) {
            return base.Channel.TransferirLoteAsync(Usuario, Password, NomConexion, P_LOTE, P_IDEMP, P_IDGRUPO, P_AGENCIA);
        }
        
        public string GenerarLote(
                    string Usuario, 
                    string Password, 
                    string NomConexion, 
                    int pGrpecid, 
                    int pEmpid, 
                    string pAgencia, 
                    System.DateTime pFechaLote, 
                    string pTipoGas, 
                    int pSubdeposito, 
                    string p_COD_GAS, 
                    double P_VACIO1, 
                    double P_VACIO2, 
                    double P_VACIO3, 
                    string P_BOM_HORA_I, 
                    string P_BOM_HORA_F, 
                    string P_RACK, 
                    double P_PRESION_F, 
                    double P_TEMPERAT_F, 
                    string P_TEST_OLOR, 
                    double P_PUREZA, 
                    string P_USU_MOV, 
                    int P_CO, 
                    int P_CO2, 
                    string P_CUMPLE, 
                    string P_LEGAJO, 
                    string P_USU_CLASIFICADOR, 
                    System.DateTime P_FECHA_CLASIFICACION, 
                    int P_CARGA_INICIAL, 
                    int P_ID_TRANSACCION) {
            return base.Channel.GenerarLote(Usuario, Password, NomConexion, pGrpecid, pEmpid, pAgencia, pFechaLote, pTipoGas, pSubdeposito, p_COD_GAS, P_VACIO1, P_VACIO2, P_VACIO3, P_BOM_HORA_I, P_BOM_HORA_F, P_RACK, P_PRESION_F, P_TEMPERAT_F, P_TEST_OLOR, P_PUREZA, P_USU_MOV, P_CO, P_CO2, P_CUMPLE, P_LEGAJO, P_USU_CLASIFICADOR, P_FECHA_CLASIFICACION, P_CARGA_INICIAL, P_ID_TRANSACCION);
        }
        
        public System.Threading.Tasks.Task<string> GenerarLoteAsync(
                    string Usuario, 
                    string Password, 
                    string NomConexion, 
                    int pGrpecid, 
                    int pEmpid, 
                    string pAgencia, 
                    System.DateTime pFechaLote, 
                    string pTipoGas, 
                    int pSubdeposito, 
                    string p_COD_GAS, 
                    double P_VACIO1, 
                    double P_VACIO2, 
                    double P_VACIO3, 
                    string P_BOM_HORA_I, 
                    string P_BOM_HORA_F, 
                    string P_RACK, 
                    double P_PRESION_F, 
                    double P_TEMPERAT_F, 
                    string P_TEST_OLOR, 
                    double P_PUREZA, 
                    string P_USU_MOV, 
                    int P_CO, 
                    int P_CO2, 
                    string P_CUMPLE, 
                    string P_LEGAJO, 
                    string P_USU_CLASIFICADOR, 
                    System.DateTime P_FECHA_CLASIFICACION, 
                    int P_CARGA_INICIAL, 
                    int P_ID_TRANSACCION) {
            return base.Channel.GenerarLoteAsync(Usuario, Password, NomConexion, pGrpecid, pEmpid, pAgencia, pFechaLote, pTipoGas, pSubdeposito, p_COD_GAS, P_VACIO1, P_VACIO2, P_VACIO3, P_BOM_HORA_I, P_BOM_HORA_F, P_RACK, P_PRESION_F, P_TEMPERAT_F, P_TEST_OLOR, P_PUREZA, P_USU_MOV, P_CO, P_CO2, P_CUMPLE, P_LEGAJO, P_USU_CLASIFICADOR, P_FECHA_CLASIFICACION, P_CARGA_INICIAL, P_ID_TRANSACCION);
        }
        
        public void DETALLE_LOTE_INS(string Usuario, string Password, string NomConexion, int N_TRANSACCION, string STR_PRODUCTO, double N_CAPACIDAD, int N_PROPIEDAD, int N_CANTIDAD) {
            base.Channel.DETALLE_LOTE_INS(Usuario, Password, NomConexion, N_TRANSACCION, STR_PRODUCTO, N_CAPACIDAD, N_PROPIEDAD, N_CANTIDAD);
        }
        
        public System.Threading.Tasks.Task DETALLE_LOTE_INSAsync(string Usuario, string Password, string NomConexion, int N_TRANSACCION, string STR_PRODUCTO, double N_CAPACIDAD, int N_PROPIEDAD, int N_CANTIDAD) {
            return base.Channel.DETALLE_LOTE_INSAsync(Usuario, Password, NomConexion, N_TRANSACCION, STR_PRODUCTO, N_CAPACIDAD, N_PROPIEDAD, N_CANTIDAD);
        }
        
        public void DETALLE_LOTE_COMPOS_INS(string Usuario, string Password, string NomConexion, int N_TRANSACCION, string STR_PRODUCTO, double N_CAPACIDAD, int N_PROPIEDAD, double N_CANTIDAD, int N_SUBDEPOSITO, string STR_TANQUE) {
            base.Channel.DETALLE_LOTE_COMPOS_INS(Usuario, Password, NomConexion, N_TRANSACCION, STR_PRODUCTO, N_CAPACIDAD, N_PROPIEDAD, N_CANTIDAD, N_SUBDEPOSITO, STR_TANQUE);
        }
        
        public System.Threading.Tasks.Task DETALLE_LOTE_COMPOS_INSAsync(string Usuario, string Password, string NomConexion, int N_TRANSACCION, string STR_PRODUCTO, double N_CAPACIDAD, int N_PROPIEDAD, double N_CANTIDAD, int N_SUBDEPOSITO, string STR_TANQUE) {
            return base.Channel.DETALLE_LOTE_COMPOS_INSAsync(Usuario, Password, NomConexion, N_TRANSACCION, STR_PRODUCTO, N_CAPACIDAD, N_PROPIEDAD, N_CANTIDAD, N_SUBDEPOSITO, STR_TANQUE);
        }
        
        public int id_Transaccion(string Usuario, string Password, string NomConexion) {
            return base.Channel.id_Transaccion(Usuario, Password, NomConexion);
        }
        
        public System.Threading.Tasks.Task<int> id_TransaccionAsync(string Usuario, string Password, string NomConexion) {
            return base.Channel.id_TransaccionAsync(Usuario, Password, NomConexion);
        }
        
        public void DEL_DATOS_TMP_LOTE(string Usuario, string Password, string NomConexion, int N_TRANSACCION) {
            base.Channel.DEL_DATOS_TMP_LOTE(Usuario, Password, NomConexion, N_TRANSACCION);
        }
        
        public System.Threading.Tasks.Task DEL_DATOS_TMP_LOTEAsync(string Usuario, string Password, string NomConexion, int N_TRANSACCION) {
            return base.Channel.DEL_DATOS_TMP_LOTEAsync(Usuario, Password, NomConexion, N_TRANSACCION);
        }
        
        public int NivelesAbiertos(string Usuario, string Password, string NomConexion, string pAgencia, string pLote, string pTurno) {
            return base.Channel.NivelesAbiertos(Usuario, Password, NomConexion, pAgencia, pLote, pTurno);
        }
        
        public System.Threading.Tasks.Task<int> NivelesAbiertosAsync(string Usuario, string Password, string NomConexion, string pAgencia, string pLote, string pTurno) {
            return base.Channel.NivelesAbiertosAsync(Usuario, Password, NomConexion, pAgencia, pLote, pTurno);
        }
        
        public System.Data.DataSet GET_TNQ_FS(string Usuario, string Password, string NomConexion, int SucUsuario) {
            return base.Channel.GET_TNQ_FS(Usuario, Password, NomConexion, SucUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_TNQ_FSAsync(string Usuario, string Password, string NomConexion, int SucUsuario) {
            return base.Channel.GET_TNQ_FSAsync(Usuario, Password, NomConexion, SucUsuario);
        }
        
        public System.Data.DataSet GET_TNQ_DESCARGA(string Usuario, string Password, string NomConexion, int SucUsuario) {
            return base.Channel.GET_TNQ_DESCARGA(Usuario, Password, NomConexion, SucUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_TNQ_DESCARGAAsync(string Usuario, string Password, string NomConexion, int SucUsuario) {
            return base.Channel.GET_TNQ_DESCARGAAsync(Usuario, Password, NomConexion, SucUsuario);
        }
        
        public string GET_TRANSAC(string Usuario, string Password, string NomConexion, string P_PROCESO) {
            return base.Channel.GET_TRANSAC(Usuario, Password, NomConexion, P_PROCESO);
        }
        
        public System.Threading.Tasks.Task<string> GET_TRANSACAsync(string Usuario, string Password, string NomConexion, string P_PROCESO) {
            return base.Channel.GET_TRANSACAsync(Usuario, Password, NomConexion, P_PROCESO);
        }
        
        public System.Data.DataSet GET_TIPO_TRANSAC(string Usuario, string Password, string NomConexion, int P_EMPRESA) {
            return base.Channel.GET_TIPO_TRANSAC(Usuario, Password, NomConexion, P_EMPRESA);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_TIPO_TRANSACAsync(string Usuario, string Password, string NomConexion, int P_EMPRESA) {
            return base.Channel.GET_TIPO_TRANSACAsync(Usuario, Password, NomConexion, P_EMPRESA);
        }
        
        public System.Data.DataSet GRABA_TRANS_TNQ_DESCARGA(string Usuario, string Password, string NomConexion, int P_TANQUE_CARGA, int P_TANQUE_DESCARGA, int P_TIPO_TRANSAC, string P_OBSERVACIONES, int P_TIPO_ENTREGA, double P_PI_DESCARGA, double P_PF_DESCARGA) {
            return base.Channel.GRABA_TRANS_TNQ_DESCARGA(Usuario, Password, NomConexion, P_TANQUE_CARGA, P_TANQUE_DESCARGA, P_TIPO_TRANSAC, P_OBSERVACIONES, P_TIPO_ENTREGA, P_PI_DESCARGA, P_PF_DESCARGA);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GRABA_TRANS_TNQ_DESCARGAAsync(string Usuario, string Password, string NomConexion, int P_TANQUE_CARGA, int P_TANQUE_DESCARGA, int P_TIPO_TRANSAC, string P_OBSERVACIONES, int P_TIPO_ENTREGA, double P_PI_DESCARGA, double P_PF_DESCARGA) {
            return base.Channel.GRABA_TRANS_TNQ_DESCARGAAsync(Usuario, Password, NomConexion, P_TANQUE_CARGA, P_TANQUE_DESCARGA, P_TIPO_TRANSAC, P_OBSERVACIONES, P_TIPO_ENTREGA, P_PI_DESCARGA, P_PF_DESCARGA);
        }
        
        public System.Data.DataSet GET_TANQUES_BYID(string Usuario, string Password, string NomConexion, int P_TANQUE) {
            return base.Channel.GET_TANQUES_BYID(Usuario, Password, NomConexion, P_TANQUE);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_TANQUES_BYIDAsync(string Usuario, string Password, string NomConexion, int P_TANQUE) {
            return base.Channel.GET_TANQUES_BYIDAsync(Usuario, Password, NomConexion, P_TANQUE);
        }
        
        public System.Data.DataSet GET_COEF_PROD(string Usuario, string Password, string NomConexion, string P_PRODUCTO) {
            return base.Channel.GET_COEF_PROD(Usuario, Password, NomConexion, P_PRODUCTO);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_COEF_PRODAsync(string Usuario, string Password, string NomConexion, string P_PRODUCTO) {
            return base.Channel.GET_COEF_PRODAsync(Usuario, Password, NomConexion, P_PRODUCTO);
        }
        
        public System.Data.DataSet GET_CONSTIPENTREGA(string Usuario, string Password, string NomConexion) {
            return base.Channel.GET_CONSTIPENTREGA(Usuario, Password, NomConexion);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_CONSTIPENTREGAAsync(string Usuario, string Password, string NomConexion) {
            return base.Channel.GET_CONSTIPENTREGAAsync(Usuario, Password, NomConexion);
        }
        
        public System.Data.DataSet GET_TIPO_ACTIVO(string Usuario, string Password, string NomConexion) {
            return base.Channel.GET_TIPO_ACTIVO(Usuario, Password, NomConexion);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_TIPO_ACTIVOAsync(string Usuario, string Password, string NomConexion) {
            return base.Channel.GET_TIPO_ACTIVOAsync(Usuario, Password, NomConexion);
        }
        
        public System.Data.DataSet GET_TIPO_ACTIVO_HAB(string Usuario, string Password, string NomConexion, int P_TIPO_REQUISITO) {
            return base.Channel.GET_TIPO_ACTIVO_HAB(Usuario, Password, NomConexion, P_TIPO_REQUISITO);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_TIPO_ACTIVO_HABAsync(string Usuario, string Password, string NomConexion, int P_TIPO_REQUISITO) {
            return base.Channel.GET_TIPO_ACTIVO_HABAsync(Usuario, Password, NomConexion, P_TIPO_REQUISITO);
        }
        
        public bool INSERT_TIPO_ACTIVO(string Usuario, string Password, string NomConexion, string P_DESCRIPCION) {
            return base.Channel.INSERT_TIPO_ACTIVO(Usuario, Password, NomConexion, P_DESCRIPCION);
        }
        
        public System.Threading.Tasks.Task<bool> INSERT_TIPO_ACTIVOAsync(string Usuario, string Password, string NomConexion, string P_DESCRIPCION) {
            return base.Channel.INSERT_TIPO_ACTIVOAsync(Usuario, Password, NomConexion, P_DESCRIPCION);
        }
        
        public bool UPDATE_TIPO_ACTIVO(string Usuario, string Password, string NomConexion, string P_DESCRIPCION, int P_ID_TIPO) {
            return base.Channel.UPDATE_TIPO_ACTIVO(Usuario, Password, NomConexion, P_DESCRIPCION, P_ID_TIPO);
        }
        
        public System.Threading.Tasks.Task<bool> UPDATE_TIPO_ACTIVOAsync(string Usuario, string Password, string NomConexion, string P_DESCRIPCION, int P_ID_TIPO) {
            return base.Channel.UPDATE_TIPO_ACTIVOAsync(Usuario, Password, NomConexion, P_DESCRIPCION, P_ID_TIPO);
        }
        
        public bool DELETE_TIPO_ACTIVO(string Usuario, string Password, string NomConexion, int P_ID_TIPO) {
            return base.Channel.DELETE_TIPO_ACTIVO(Usuario, Password, NomConexion, P_ID_TIPO);
        }
        
        public System.Threading.Tasks.Task<bool> DELETE_TIPO_ACTIVOAsync(string Usuario, string Password, string NomConexion, int P_ID_TIPO) {
            return base.Channel.DELETE_TIPO_ACTIVOAsync(Usuario, Password, NomConexion, P_ID_TIPO);
        }
        
        public System.Data.DataSet GET_REQ_LLEN(string Usuario, string Password, string NomConexion, int P_TIPO_ACTIVO, int P_TIPO_REQUISITO, string P_DESCRIPCION) {
            return base.Channel.GET_REQ_LLEN(Usuario, Password, NomConexion, P_TIPO_ACTIVO, P_TIPO_REQUISITO, P_DESCRIPCION);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_REQ_LLENAsync(string Usuario, string Password, string NomConexion, int P_TIPO_ACTIVO, int P_TIPO_REQUISITO, string P_DESCRIPCION) {
            return base.Channel.GET_REQ_LLENAsync(Usuario, Password, NomConexion, P_TIPO_ACTIVO, P_TIPO_REQUISITO, P_DESCRIPCION);
        }
        
        public string INSERT_REQ_LLEN(string Usuario, string Password, string NomConexion, string P_DESCRIPCION, int P_TIPO_REQUISITO, int P_TIPO_ACTIVO, int P_ESTADO, int P_CANT_PREGUNTAS) {
            return base.Channel.INSERT_REQ_LLEN(Usuario, Password, NomConexion, P_DESCRIPCION, P_TIPO_REQUISITO, P_TIPO_ACTIVO, P_ESTADO, P_CANT_PREGUNTAS);
        }
        
        public System.Threading.Tasks.Task<string> INSERT_REQ_LLENAsync(string Usuario, string Password, string NomConexion, string P_DESCRIPCION, int P_TIPO_REQUISITO, int P_TIPO_ACTIVO, int P_ESTADO, int P_CANT_PREGUNTAS) {
            return base.Channel.INSERT_REQ_LLENAsync(Usuario, Password, NomConexion, P_DESCRIPCION, P_TIPO_REQUISITO, P_TIPO_ACTIVO, P_ESTADO, P_CANT_PREGUNTAS);
        }
        
        public bool UPDATE_REQ_LLEN(string Usuario, string Password, string NomConexion, string P_DESCRIPCION, int P_TIPO_REQUISITO, int P_TIPO_ACTIVO, int P_ESTADO, int P_CANT_PREGUNTAS, int P_ID_REQUISITO) {
            return base.Channel.UPDATE_REQ_LLEN(Usuario, Password, NomConexion, P_DESCRIPCION, P_TIPO_REQUISITO, P_TIPO_ACTIVO, P_ESTADO, P_CANT_PREGUNTAS, P_ID_REQUISITO);
        }
        
        public System.Threading.Tasks.Task<bool> UPDATE_REQ_LLENAsync(string Usuario, string Password, string NomConexion, string P_DESCRIPCION, int P_TIPO_REQUISITO, int P_TIPO_ACTIVO, int P_ESTADO, int P_CANT_PREGUNTAS, int P_ID_REQUISITO) {
            return base.Channel.UPDATE_REQ_LLENAsync(Usuario, Password, NomConexion, P_DESCRIPCION, P_TIPO_REQUISITO, P_TIPO_ACTIVO, P_ESTADO, P_CANT_PREGUNTAS, P_ID_REQUISITO);
        }
        
        public System.Data.DataSet GET_TIPO_REQ(string Usuario, string Password, string NomConexion) {
            return base.Channel.GET_TIPO_REQ(Usuario, Password, NomConexion);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_TIPO_REQAsync(string Usuario, string Password, string NomConexion) {
            return base.Channel.GET_TIPO_REQAsync(Usuario, Password, NomConexion);
        }
        
        public System.Data.DataSet GET_TIPO_RESPUESTAS(string Usuario, string Password, string NomConexion) {
            return base.Channel.GET_TIPO_RESPUESTAS(Usuario, Password, NomConexion);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_TIPO_RESPUESTASAsync(string Usuario, string Password, string NomConexion) {
            return base.Channel.GET_TIPO_RESPUESTASAsync(Usuario, Password, NomConexion);
        }
        
        public System.Data.DataSet GET_DET_REQ_LLEN(string Usuario, string Password, string NomConexion, int P_ID_REQUISITO) {
            return base.Channel.GET_DET_REQ_LLEN(Usuario, Password, NomConexion, P_ID_REQUISITO);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_DET_REQ_LLENAsync(string Usuario, string Password, string NomConexion, int P_ID_REQUISITO) {
            return base.Channel.GET_DET_REQ_LLENAsync(Usuario, Password, NomConexion, P_ID_REQUISITO);
        }
        
        public System.Data.DataSet GET_DET_REQ_LLEN_BYID(string Usuario, string Password, string NomConexion, int P_ID_DETALLE) {
            return base.Channel.GET_DET_REQ_LLEN_BYID(Usuario, Password, NomConexion, P_ID_DETALLE);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_DET_REQ_LLEN_BYIDAsync(string Usuario, string Password, string NomConexion, int P_ID_DETALLE) {
            return base.Channel.GET_DET_REQ_LLEN_BYIDAsync(Usuario, Password, NomConexion, P_ID_DETALLE);
        }
        
        public string INSERT_DET_REQ_LLEN(string Usuario, string Password, string NomConexion, int P_ID_REQUISITO, string P_DESCRIPCION, int P_SN_OBLIGA, int P_ID_RESPUESTA, int P_ORDEN, int P_ESTADO) {
            return base.Channel.INSERT_DET_REQ_LLEN(Usuario, Password, NomConexion, P_ID_REQUISITO, P_DESCRIPCION, P_SN_OBLIGA, P_ID_RESPUESTA, P_ORDEN, P_ESTADO);
        }
        
        public System.Threading.Tasks.Task<string> INSERT_DET_REQ_LLENAsync(string Usuario, string Password, string NomConexion, int P_ID_REQUISITO, string P_DESCRIPCION, int P_SN_OBLIGA, int P_ID_RESPUESTA, int P_ORDEN, int P_ESTADO) {
            return base.Channel.INSERT_DET_REQ_LLENAsync(Usuario, Password, NomConexion, P_ID_REQUISITO, P_DESCRIPCION, P_SN_OBLIGA, P_ID_RESPUESTA, P_ORDEN, P_ESTADO);
        }
        
        public bool UPDATE_DET_REQ_LLEN(string Usuario, string Password, string NomConexion, int P_ID_REQUISITO, string P_DESCRIPCION, int P_SN_OBLIGA, int P_ID_RESPUESTA, int P_ORDEN, int P_ESTADO, int P_ID_DETALLE) {
            return base.Channel.UPDATE_DET_REQ_LLEN(Usuario, Password, NomConexion, P_ID_REQUISITO, P_DESCRIPCION, P_SN_OBLIGA, P_ID_RESPUESTA, P_ORDEN, P_ESTADO, P_ID_DETALLE);
        }
        
        public System.Threading.Tasks.Task<bool> UPDATE_DET_REQ_LLENAsync(string Usuario, string Password, string NomConexion, int P_ID_REQUISITO, string P_DESCRIPCION, int P_SN_OBLIGA, int P_ID_RESPUESTA, int P_ORDEN, int P_ESTADO, int P_ID_DETALLE) {
            return base.Channel.UPDATE_DET_REQ_LLENAsync(Usuario, Password, NomConexion, P_ID_REQUISITO, P_DESCRIPCION, P_SN_OBLIGA, P_ID_RESPUESTA, P_ORDEN, P_ESTADO, P_ID_DETALLE);
        }
        
        public System.Data.DataSet GET_RES_LLEN(string Usuario, string Password, string NomConexion) {
            return base.Channel.GET_RES_LLEN(Usuario, Password, NomConexion);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_RES_LLENAsync(string Usuario, string Password, string NomConexion) {
            return base.Channel.GET_RES_LLENAsync(Usuario, Password, NomConexion);
        }
        
        public System.Data.DataSet GET_RES_LLEN_BYID(string Usuario, string Password, string NomConexion, int P_ID_RESPUESTA) {
            return base.Channel.GET_RES_LLEN_BYID(Usuario, Password, NomConexion, P_ID_RESPUESTA);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_RES_LLEN_BYIDAsync(string Usuario, string Password, string NomConexion, int P_ID_RESPUESTA) {
            return base.Channel.GET_RES_LLEN_BYIDAsync(Usuario, Password, NomConexion, P_ID_RESPUESTA);
        }
        
        public System.Data.DataSet GET_RES_LLEN_BYTIPO(string Usuario, string Password, string NomConexion, int P_TIPO_RESPUESTA) {
            return base.Channel.GET_RES_LLEN_BYTIPO(Usuario, Password, NomConexion, P_TIPO_RESPUESTA);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_RES_LLEN_BYTIPOAsync(string Usuario, string Password, string NomConexion, int P_TIPO_RESPUESTA) {
            return base.Channel.GET_RES_LLEN_BYTIPOAsync(Usuario, Password, NomConexion, P_TIPO_RESPUESTA);
        }
        
        public string INSERT_RES_LLEN(string Usuario, string Password, string NomConexion, int P_TIPO_RESPUESTA, string P_VALORES, string P_VALOR_DEFECTO) {
            return base.Channel.INSERT_RES_LLEN(Usuario, Password, NomConexion, P_TIPO_RESPUESTA, P_VALORES, P_VALOR_DEFECTO);
        }
        
        public System.Threading.Tasks.Task<string> INSERT_RES_LLENAsync(string Usuario, string Password, string NomConexion, int P_TIPO_RESPUESTA, string P_VALORES, string P_VALOR_DEFECTO) {
            return base.Channel.INSERT_RES_LLENAsync(Usuario, Password, NomConexion, P_TIPO_RESPUESTA, P_VALORES, P_VALOR_DEFECTO);
        }
        
        public bool UPDATE_RES_LLEN(string Usuario, string Password, string NomConexion, int P_TIPO_RESPUESTA, string P_VALORES, string P_VALOR_DEFECTO, int P_ID_RESPUESTA) {
            return base.Channel.UPDATE_RES_LLEN(Usuario, Password, NomConexion, P_TIPO_RESPUESTA, P_VALORES, P_VALOR_DEFECTO, P_ID_RESPUESTA);
        }
        
        public System.Threading.Tasks.Task<bool> UPDATE_RES_LLENAsync(string Usuario, string Password, string NomConexion, int P_TIPO_RESPUESTA, string P_VALORES, string P_VALOR_DEFECTO, int P_ID_RESPUESTA) {
            return base.Channel.UPDATE_RES_LLENAsync(Usuario, Password, NomConexion, P_TIPO_RESPUESTA, P_VALORES, P_VALOR_DEFECTO, P_ID_RESPUESTA);
        }
        
        public bool DELETE_RES_LLEN(string Usuario, string Password, string NomConexion, int P_ID_RESPUESTA) {
            return base.Channel.DELETE_RES_LLEN(Usuario, Password, NomConexion, P_ID_RESPUESTA);
        }
        
        public System.Threading.Tasks.Task<bool> DELETE_RES_LLENAsync(string Usuario, string Password, string NomConexion, int P_ID_RESPUESTA) {
            return base.Channel.DELETE_RES_LLENAsync(Usuario, Password, NomConexion, P_ID_RESPUESTA);
        }
        
        public System.Data.DataSet GET_ESTADO_RACK(string Usuario, string Password, string NomConexion) {
            return base.Channel.GET_ESTADO_RACK(Usuario, Password, NomConexion);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_ESTADO_RACKAsync(string Usuario, string Password, string NomConexion) {
            return base.Channel.GET_ESTADO_RACKAsync(Usuario, Password, NomConexion);
        }
        
        public System.Data.DataSet GET_RACKS(string Usuario, string Password, string NomConexion, int P_EMP_ID) {
            return base.Channel.GET_RACKS(Usuario, Password, NomConexion, P_EMP_ID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_RACKSAsync(string Usuario, string Password, string NomConexion, int P_EMP_ID) {
            return base.Channel.GET_RACKSAsync(Usuario, Password, NomConexion, P_EMP_ID);
        }
        
        public bool INSERT_RACKS(string Usuario, string Password, string NomConexion, int P_N_ESTADO, string P_C_AGENCI) {
            return base.Channel.INSERT_RACKS(Usuario, Password, NomConexion, P_N_ESTADO, P_C_AGENCI);
        }
        
        public System.Threading.Tasks.Task<bool> INSERT_RACKSAsync(string Usuario, string Password, string NomConexion, int P_N_ESTADO, string P_C_AGENCI) {
            return base.Channel.INSERT_RACKSAsync(Usuario, Password, NomConexion, P_N_ESTADO, P_C_AGENCI);
        }
        
        public bool UPDATE_RACKS(string Usuario, string Password, string NomConexion, int P_N_ESTADO, int P_N_NUMRACK) {
            return base.Channel.UPDATE_RACKS(Usuario, Password, NomConexion, P_N_ESTADO, P_N_NUMRACK);
        }
        
        public System.Threading.Tasks.Task<bool> UPDATE_RACKSAsync(string Usuario, string Password, string NomConexion, int P_N_ESTADO, int P_N_NUMRACK) {
            return base.Channel.UPDATE_RACKSAsync(Usuario, Password, NomConexion, P_N_ESTADO, P_N_NUMRACK);
        }
        
        public System.Data.DataSet GET_SUCURSALES(string Usuario, string Password, string NomConexion, int P_EMPID) {
            return base.Channel.GET_SUCURSALES(Usuario, Password, NomConexion, P_EMPID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_SUCURSALESAsync(string Usuario, string Password, string NomConexion, int P_EMPID) {
            return base.Channel.GET_SUCURSALESAsync(Usuario, Password, NomConexion, P_EMPID);
        }
        
        public System.Data.DataSet GET_SERIALESEVALUADOS(string Usuario, string Password, string NomConexion, string P_PRODUCTO) {
            return base.Channel.GET_SERIALESEVALUADOS(Usuario, Password, NomConexion, P_PRODUCTO);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_SERIALESEVALUADOSAsync(string Usuario, string Password, string NomConexion, string P_PRODUCTO) {
            return base.Channel.GET_SERIALESEVALUADOSAsync(Usuario, Password, NomConexion, P_PRODUCTO);
        }
        
        public System.Data.DataSet GET_SERIALESEVALUADOSLOTE(string Usuario, string Password, string NomConexion, string plote, string pProducto) {
            return base.Channel.GET_SERIALESEVALUADOSLOTE(Usuario, Password, NomConexion, plote, pProducto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_SERIALESEVALUADOSLOTEAsync(string Usuario, string Password, string NomConexion, string plote, string pProducto) {
            return base.Channel.GET_SERIALESEVALUADOSLOTEAsync(Usuario, Password, NomConexion, plote, pProducto);
        }
        
        public void RECLASIFICA_SERIAL_INS(string Usuario, string Password, string NomConexion, string plote, int pSerial, int pReclasifica, int pVentea) {
            base.Channel.RECLASIFICA_SERIAL_INS(Usuario, Password, NomConexion, plote, pSerial, pReclasifica, pVentea);
        }
        
        public System.Threading.Tasks.Task RECLASIFICA_SERIAL_INSAsync(string Usuario, string Password, string NomConexion, string plote, int pSerial, int pReclasifica, int pVentea) {
            return base.Channel.RECLASIFICA_SERIAL_INSAsync(Usuario, Password, NomConexion, plote, pSerial, pReclasifica, pVentea);
        }
        
        public void RECLASIFICA_SERIAL_DEL(string Usuario, string Password, string NomConexion, string plote) {
            base.Channel.RECLASIFICA_SERIAL_DEL(Usuario, Password, NomConexion, plote);
        }
        
        public System.Threading.Tasks.Task RECLASIFICA_SERIAL_DELAsync(string Usuario, string Password, string NomConexion, string plote) {
            return base.Channel.RECLASIFICA_SERIAL_DELAsync(Usuario, Password, NomConexion, plote);
        }
        
        public System.Data.DataSet GET_DETALLE_EVA(string Usuario, string Password, string NomConexion, int P_ID_EVALUACION) {
            return base.Channel.GET_DETALLE_EVA(Usuario, Password, NomConexion, P_ID_EVALUACION);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_DETALLE_EVAAsync(string Usuario, string Password, string NomConexion, int P_ID_EVALUACION) {
            return base.Channel.GET_DETALLE_EVAAsync(Usuario, Password, NomConexion, P_ID_EVALUACION);
        }
        
        public string RECLASIFICA_SERIAL(string Usuario, string Password, string NomConexion, string P_NEW_PROD, string pLote) {
            return base.Channel.RECLASIFICA_SERIAL(Usuario, Password, NomConexion, P_NEW_PROD, pLote);
        }
        
        public System.Threading.Tasks.Task<string> RECLASIFICA_SERIALAsync(string Usuario, string Password, string NomConexion, string P_NEW_PROD, string pLote) {
            return base.Channel.RECLASIFICA_SERIALAsync(Usuario, Password, NomConexion, P_NEW_PROD, pLote);
        }
        
        public System.Data.DataSet GET_PRODUCTOS_RECLA(string Usuario, string Password, string NomConexion, string P_PRODUCTO) {
            return base.Channel.GET_PRODUCTOS_RECLA(Usuario, Password, NomConexion, P_PRODUCTO);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_PRODUCTOS_RECLAAsync(string Usuario, string Password, string NomConexion, string P_PRODUCTO) {
            return base.Channel.GET_PRODUCTOS_RECLAAsync(Usuario, Password, NomConexion, P_PRODUCTO);
        }
        
        public System.Data.DataSet GET_PRODUCTOS_FILTRO(string Usuario, string Password, string NomConexion) {
            return base.Channel.GET_PRODUCTOS_FILTRO(Usuario, Password, NomConexion);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GET_PRODUCTOS_FILTROAsync(string Usuario, string Password, string NomConexion) {
            return base.Channel.GET_PRODUCTOS_FILTROAsync(Usuario, Password, NomConexion);
        }
        
        public System.Data.DataSet ConsSubdeposito(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia, string _Marca, int _IdUsuario) {
            return base.Channel.ConsSubdeposito(Usuario, Password, NomConexion, _Empresa, _Grupo, _Agencia, _Marca, _IdUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsSubdepositoAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia, string _Marca, int _IdUsuario) {
            return base.Channel.ConsSubdepositoAsync(Usuario, Password, NomConexion, _Empresa, _Grupo, _Agencia, _Marca, _IdUsuario);
        }
        
        public System.Data.DataSet BuscarTurno(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia) {
            return base.Channel.BuscarTurno(Usuario, Password, NomConexion, _Empresa, _Agencia);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarTurnoAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia) {
            return base.Channel.BuscarTurnoAsync(Usuario, Password, NomConexion, _Empresa, _Agencia);
        }
        
        public System.Data.DataSet ConsUnidadMed(string Usuario, string Password, string NomConexion, int _Empresa, string _Producto) {
            return base.Channel.ConsUnidadMed(Usuario, Password, NomConexion, _Empresa, _Producto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsUnidadMedAsync(string Usuario, string Password, string NomConexion, int _Empresa, string _Producto) {
            return base.Channel.ConsUnidadMedAsync(Usuario, Password, NomConexion, _Empresa, _Producto);
        }
        
        public System.Data.DataSet ConsStockeables(string Usuario, string Password, string NomConexion, int _Empresa, int _Tipo) {
            return base.Channel.ConsStockeables(Usuario, Password, NomConexion, _Empresa, _Tipo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsStockeablesAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Tipo) {
            return base.Channel.ConsStockeablesAsync(Usuario, Password, NomConexion, _Empresa, _Tipo);
        }
        
        public System.Data.DataSet ConsGases(string Usuario, string Password, string NomConexion, int _Agencia, int _Tipo) {
            return base.Channel.ConsGases(Usuario, Password, NomConexion, _Agencia, _Tipo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsGasesAsync(string Usuario, string Password, string NomConexion, int _Agencia, int _Tipo) {
            return base.Channel.ConsGasesAsync(Usuario, Password, NomConexion, _Agencia, _Tipo);
        }
        
        public System.Data.DataSet ConsClasificador(string Usuario, string Password, string NomConexion) {
            return base.Channel.ConsClasificador(Usuario, Password, NomConexion);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsClasificadorAsync(string Usuario, string Password, string NomConexion) {
            return base.Channel.ConsClasificadorAsync(Usuario, Password, NomConexion);
        }
        
        public System.Data.DataSet ConsRacks(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia) {
            return base.Channel.ConsRacks(Usuario, Password, NomConexion, _Empresa, _Grupo, _Agencia);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsRacksAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia) {
            return base.Channel.ConsRacksAsync(Usuario, Password, NomConexion, _Empresa, _Grupo, _Agencia);
        }
        
        public System.Data.DataSet ConsTipPrdMedicinal(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Producto) {
            return base.Channel.ConsTipPrdMedicinal(Usuario, Password, NomConexion, _Empresa, _Grupo, _Producto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsTipPrdMedicinalAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Producto) {
            return base.Channel.ConsTipPrdMedicinalAsync(Usuario, Password, NomConexion, _Empresa, _Grupo, _Producto);
        }
        
        public System.Data.DataSet ConsPrimerVacio(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia, string _Producto) {
            return base.Channel.ConsPrimerVacio(Usuario, Password, NomConexion, _Empresa, _Grupo, _Agencia, _Producto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsPrimerVacioAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia, string _Producto) {
            return base.Channel.ConsPrimerVacioAsync(Usuario, Password, NomConexion, _Empresa, _Grupo, _Agencia, _Producto);
        }
        
        public System.Data.DataSet ConsProductInsumLastro(string Usuario, string Password, string NomConexion, int _Agencia, string _Producto) {
            return base.Channel.ConsProductInsumLastro(Usuario, Password, NomConexion, _Agencia, _Producto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsProductInsumLastroAsync(string Usuario, string Password, string NomConexion, int _Agencia, string _Producto) {
            return base.Channel.ConsProductInsumLastroAsync(Usuario, Password, NomConexion, _Agencia, _Producto);
        }
        
        public System.Data.DataSet ConsultarCapacidades(string Usuario, string Password, string NomConexion, string _capacidad) {
            return base.Channel.ConsultarCapacidades(Usuario, Password, NomConexion, _capacidad);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarCapacidadesAsync(string Usuario, string Password, string NomConexion, string _capacidad) {
            return base.Channel.ConsultarCapacidadesAsync(Usuario, Password, NomConexion, _capacidad);
        }
        
        public System.Data.DataSet ConsultarCapacidadesPrd(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Producto) {
            return base.Channel.ConsultarCapacidadesPrd(Usuario, Password, NomConexion, _Empresa, _Grupo, _Producto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarCapacidadesPrdAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Producto) {
            return base.Channel.ConsultarCapacidadesPrdAsync(Usuario, Password, NomConexion, _Empresa, _Grupo, _Producto);
        }
        
        public System.Data.DataSet ConsultaTermoPrax(string Usuario, string Password, string NomConexion) {
            return base.Channel.ConsultaTermoPrax(Usuario, Password, NomConexion);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaTermoPraxAsync(string Usuario, string Password, string NomConexion) {
            return base.Channel.ConsultaTermoPraxAsync(Usuario, Password, NomConexion);
        }
        
        public System.Data.DataSet ConsultaTermoPart(string Usuario, string Password, string NomConexion) {
            return base.Channel.ConsultaTermoPart(Usuario, Password, NomConexion);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaTermoPartAsync(string Usuario, string Password, string NomConexion) {
            return base.Channel.ConsultaTermoPartAsync(Usuario, Password, NomConexion);
        }
        
        public System.Data.DataSet ConsultaTanque(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia, string _Producto, int _Tipo) {
            return base.Channel.ConsultaTanque(Usuario, Password, NomConexion, _Empresa, _Agencia, _Producto, _Tipo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaTanqueAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia, string _Producto, int _Tipo) {
            return base.Channel.ConsultaTanqueAsync(Usuario, Password, NomConexion, _Empresa, _Agencia, _Producto, _Tipo);
        }
        
        public System.Data.DataSet ConsultaTanqueDisp(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia, string _Producto, string _codproducto) {
            return base.Channel.ConsultaTanqueDisp(Usuario, Password, NomConexion, _Empresa, _Agencia, _Producto, _codproducto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaTanqueDispAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia, string _Producto, string _codproducto) {
            return base.Channel.ConsultaTanqueDispAsync(Usuario, Password, NomConexion, _Empresa, _Agencia, _Producto, _codproducto);
        }
        
        public System.Data.DataSet ConsultaStockDisp(string Usuario, string Password, string NomConexion, int _Empresa, string _codproducto) {
            return base.Channel.ConsultaStockDisp(Usuario, Password, NomConexion, _Empresa, _codproducto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaStockDispAsync(string Usuario, string Password, string NomConexion, int _Empresa, string _codproducto) {
            return base.Channel.ConsultaStockDispAsync(Usuario, Password, NomConexion, _Empresa, _codproducto);
        }
        
        public System.Data.DataSet ConsultarStockSucursal(string Usuario, string Password, string NomConexion, int _Grupo, int _Empresa, string _CodSubdeposito, string _idnumarticulo) {
            return base.Channel.ConsultarStockSucursal(Usuario, Password, NomConexion, _Grupo, _Empresa, _CodSubdeposito, _idnumarticulo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarStockSucursalAsync(string Usuario, string Password, string NomConexion, int _Grupo, int _Empresa, string _CodSubdeposito, string _idnumarticulo) {
            return base.Channel.ConsultarStockSucursalAsync(Usuario, Password, NomConexion, _Grupo, _Empresa, _CodSubdeposito, _idnumarticulo);
        }
        
        public System.Data.DataSet ConsultarStockTanque(string Usuario, string Password, string NomConexion, string _tanque) {
            return base.Channel.ConsultarStockTanque(Usuario, Password, NomConexion, _tanque);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarStockTanqueAsync(string Usuario, string Password, string NomConexion, string _tanque) {
            return base.Channel.ConsultarStockTanqueAsync(Usuario, Password, NomConexion, _tanque);
        }
        
        public System.Data.DataSet ConsultarArtIdNum(string Usuario, string Password, string NomConexion, int _Empresa, string _Codproducto) {
            return base.Channel.ConsultarArtIdNum(Usuario, Password, NomConexion, _Empresa, _Codproducto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarArtIdNumAsync(string Usuario, string Password, string NomConexion, int _Empresa, string _Codproducto) {
            return base.Channel.ConsultarArtIdNumAsync(Usuario, Password, NomConexion, _Empresa, _Codproducto);
        }
        
        public System.Data.DataSet ConsultarCodPrd(string Usuario, string Password, string NomConexion, int _Empresa, string _Codproducto) {
            return base.Channel.ConsultarCodPrd(Usuario, Password, NomConexion, _Empresa, _Codproducto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarCodPrdAsync(string Usuario, string Password, string NomConexion, int _Empresa, string _Codproducto) {
            return base.Channel.ConsultarCodPrdAsync(Usuario, Password, NomConexion, _Empresa, _Codproducto);
        }
        
        public System.Data.DataSet ConsultaUsaTanque(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Codproducto) {
            return base.Channel.ConsultaUsaTanque(Usuario, Password, NomConexion, _Empresa, _Grupo, _Codproducto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaUsaTanqueAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Codproducto) {
            return base.Channel.ConsultaUsaTanqueAsync(Usuario, Password, NomConexion, _Empresa, _Grupo, _Codproducto);
        }
        
        public System.Data.DataSet ConsultarInsumosPrd(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia, string _Codproducto, int _Sustituto) {
            return base.Channel.ConsultarInsumosPrd(Usuario, Password, NomConexion, _Empresa, _Agencia, _Codproducto, _Sustituto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarInsumosPrdAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Agencia, string _Codproducto, int _Sustituto) {
            return base.Channel.ConsultarInsumosPrdAsync(Usuario, Password, NomConexion, _Empresa, _Agencia, _Codproducto, _Sustituto);
        }
        
        public System.Data.DataSet ConsultaLegajo(string Usuario, string Password, string NomConexion, string _IdUsuario) {
            return base.Channel.ConsultaLegajo(Usuario, Password, NomConexion, _IdUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaLegajoAsync(string Usuario, string Password, string NomConexion, string _IdUsuario) {
            return base.Channel.ConsultaLegajoAsync(Usuario, Password, NomConexion, _IdUsuario);
        }
        
        public System.Data.DataSet ConsultaNombreUsuario(string Usuario, string Password, string NomConexion, string _IdUsuario) {
            return base.Channel.ConsultaNombreUsuario(Usuario, Password, NomConexion, _IdUsuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaNombreUsuarioAsync(string Usuario, string Password, string NomConexion, string _IdUsuario) {
            return base.Channel.ConsultaNombreUsuarioAsync(Usuario, Password, NomConexion, _IdUsuario);
        }
        
        public System.Data.DataSet ConsultaNombreArticulo(string Usuario, string Password, string NomConexion, int _Empresa, string _Codproducto) {
            return base.Channel.ConsultaNombreArticulo(Usuario, Password, NomConexion, _Empresa, _Codproducto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaNombreArticuloAsync(string Usuario, string Password, string NomConexion, int _Empresa, string _Codproducto) {
            return base.Channel.ConsultaNombreArticuloAsync(Usuario, Password, NomConexion, _Empresa, _Codproducto);
        }
        
        public System.Data.DataSet ConsultaNombreDirTecnico(string Usuario, string Password, string NomConexion, int _Agencia) {
            return base.Channel.ConsultaNombreDirTecnico(Usuario, Password, NomConexion, _Agencia);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaNombreDirTecnicoAsync(string Usuario, string Password, string NomConexion, int _Agencia) {
            return base.Channel.ConsultaNombreDirTecnicoAsync(Usuario, Password, NomConexion, _Agencia);
        }
        
        public System.Data.DataSet ConsultaUsuHab(string Usuario, string Password, string NomConexion, string _Aplicacion, string _Usuario) {
            return base.Channel.ConsultaUsuHab(Usuario, Password, NomConexion, _Aplicacion, _Usuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaUsuHabAsync(string Usuario, string Password, string NomConexion, string _Aplicacion, string _Usuario) {
            return base.Channel.ConsultaUsuHabAsync(Usuario, Password, NomConexion, _Aplicacion, _Usuario);
        }
        
        public System.Data.DataSet ConsultaNombreLegajo(string Usuario, string Password, string NomConexion, string _Legajo) {
            return base.Channel.ConsultaNombreLegajo(Usuario, Password, NomConexion, _Legajo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaNombreLegajoAsync(string Usuario, string Password, string NomConexion, string _Legajo) {
            return base.Channel.ConsultaNombreLegajoAsync(Usuario, Password, NomConexion, _Legajo);
        }
        
        public System.Data.DataSet ValidaProductoEnCuarentena(string Usuario, string Password, string NomConexion, string _Codproducto) {
            return base.Channel.ValidaProductoEnCuarentena(Usuario, Password, NomConexion, _Codproducto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ValidaProductoEnCuarentenaAsync(string Usuario, string Password, string NomConexion, string _Codproducto) {
            return base.Channel.ValidaProductoEnCuarentenaAsync(Usuario, Password, NomConexion, _Codproducto);
        }
        
        public System.Data.DataSet ConsultaAnalisisGM(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Codproducto) {
            return base.Channel.ConsultaAnalisisGM(Usuario, Password, NomConexion, _Empresa, _Grupo, _Codproducto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaAnalisisGMAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, string _Codproducto) {
            return base.Channel.ConsultaAnalisisGMAsync(Usuario, Password, NomConexion, _Empresa, _Grupo, _Codproducto);
        }
        
        public System.Data.DataSet ConsultaLastroInsumos(string Usuario, string Password, string NomConexion, int _Empresa, string _Subdeposito, int _Agencia, string _Codproducto, int _Grupo) {
            return base.Channel.ConsultaLastroInsumos(Usuario, Password, NomConexion, _Empresa, _Subdeposito, _Agencia, _Codproducto, _Grupo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaLastroInsumosAsync(string Usuario, string Password, string NomConexion, int _Empresa, string _Subdeposito, int _Agencia, string _Codproducto, int _Grupo) {
            return base.Channel.ConsultaLastroInsumosAsync(Usuario, Password, NomConexion, _Empresa, _Subdeposito, _Agencia, _Codproducto, _Grupo);
        }
        
        public System.Data.DataSet ConsultaSecuencia(string Usuario, string Password, string NomConexion, string _Secuencia) {
            return base.Channel.ConsultaSecuencia(Usuario, Password, NomConexion, _Secuencia);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaSecuenciaAsync(string Usuario, string Password, string NomConexion, string _Secuencia) {
            return base.Channel.ConsultaSecuenciaAsync(Usuario, Password, NomConexion, _Secuencia);
        }
        
        public System.Data.DataSet ConsultaDatSecuencia(string Usuario, string Password, string NomConexion, string _Secuencia, string _Codproducto) {
            return base.Channel.ConsultaDatSecuencia(Usuario, Password, NomConexion, _Secuencia, _Codproducto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultaDatSecuenciaAsync(string Usuario, string Password, string NomConexion, string _Secuencia, string _Codproducto) {
            return base.Channel.ConsultaDatSecuenciaAsync(Usuario, Password, NomConexion, _Secuencia, _Codproducto);
        }
        
        public System.Data.DataSet ConsultarComprobante(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia) {
            return base.Channel.ConsultarComprobante(Usuario, Password, NomConexion, _Empresa, _Grupo, _Agencia);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarComprobanteAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia) {
            return base.Channel.ConsultarComprobanteAsync(Usuario, Password, NomConexion, _Empresa, _Grupo, _Agencia);
        }
        
        public System.Data.DataSet ConsultarNoComprobante(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia) {
            return base.Channel.ConsultarNoComprobante(Usuario, Password, NomConexion, _Empresa, _Grupo, _Agencia);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarNoComprobanteAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia) {
            return base.Channel.ConsultarNoComprobanteAsync(Usuario, Password, NomConexion, _Empresa, _Grupo, _Agencia);
        }
        
        public bool GrabarSecuencias(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia, string _Comprabante, System.Data.DataTable _dtParticular) {
            return base.Channel.GrabarSecuencias(Usuario, Password, NomConexion, _Empresa, _Grupo, _Agencia, _Comprabante, _dtParticular);
        }
        
        public System.Threading.Tasks.Task<bool> GrabarSecuenciasAsync(string Usuario, string Password, string NomConexion, int _Empresa, int _Grupo, int _Agencia, string _Comprabante, System.Data.DataTable _dtParticular) {
            return base.Channel.GrabarSecuenciasAsync(Usuario, Password, NomConexion, _Empresa, _Grupo, _Agencia, _Comprabante, _dtParticular);
        }
        
        public System.Data.DataSet LongitudTubo(string Usuario, string Password, string NomConexion) {
            return base.Channel.LongitudTubo(Usuario, Password, NomConexion);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LongitudTuboAsync(string Usuario, string Password, string NomConexion) {
            return base.Channel.LongitudTuboAsync(Usuario, Password, NomConexion);
        }
        
        public System.Data.DataSet ConsExisteCx(string Usuario, string Password, string NomConexion, string _Lote, string _NoCx) {
            return base.Channel.ConsExisteCx(Usuario, Password, NomConexion, _Lote, _NoCx);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsExisteCxAsync(string Usuario, string Password, string NomConexion, string _Lote, string _NoCx) {
            return base.Channel.ConsExisteCxAsync(Usuario, Password, NomConexion, _Lote, _NoCx);
        }
        
        public System.Data.DataSet ConsNombreLegajo(string Usuario, string Password, string NomConexion, string _CodLegajo) {
            return base.Channel.ConsNombreLegajo(Usuario, Password, NomConexion, _CodLegajo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsNombreLegajoAsync(string Usuario, string Password, string NomConexion, string _CodLegajo) {
            return base.Channel.ConsNombreLegajoAsync(Usuario, Password, NomConexion, _CodLegajo);
        }
        
        public System.Data.DataSet LegajoValido(string Usuario, string Password, string NomConexion, string _Aplicacion, string _CodLegajo, string _Contrasena) {
            return base.Channel.LegajoValido(Usuario, Password, NomConexion, _Aplicacion, _CodLegajo, _Contrasena);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LegajoValidoAsync(string Usuario, string Password, string NomConexion, string _Aplicacion, string _CodLegajo, string _Contrasena) {
            return base.Channel.LegajoValidoAsync(Usuario, Password, NomConexion, _Aplicacion, _CodLegajo, _Contrasena);
        }
        
        public System.Data.DataSet ConsEtiquetasAjenos(string Usuario, string Password, string NomConexion, string _Lote) {
            return base.Channel.ConsEtiquetasAjenos(Usuario, Password, NomConexion, _Lote);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsEtiquetasAjenosAsync(string Usuario, string Password, string NomConexion, string _Lote) {
            return base.Channel.ConsEtiquetasAjenosAsync(Usuario, Password, NomConexion, _Lote);
        }
        
        public System.Data.DataSet ConsEtiquetaAjenoCx(string Usuario, string Password, string NomConexion, string _Lote, string _NoCx) {
            return base.Channel.ConsEtiquetaAjenoCx(Usuario, Password, NomConexion, _Lote, _NoCx);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsEtiquetaAjenoCxAsync(string Usuario, string Password, string NomConexion, string _Lote, string _NoCx) {
            return base.Channel.ConsEtiquetaAjenoCxAsync(Usuario, Password, NomConexion, _Lote, _NoCx);
        }
    }
}
