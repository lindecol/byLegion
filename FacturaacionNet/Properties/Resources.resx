<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ExpanderDown" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABUAAAAVCAYAAACpF6WWAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7CAAAOwgEVKEqAAAACjElE
        QVQ4T62UW08aURSFTf+Sf9NYTWrte9UaIRERCAqpMzahgHcRFQ1CiKCAd+6I2fXbyZnO6DR9aB9WZs7t
        O2uvM2fGRh9G/12+nUYb9k+ZX1iU2dkvMjExoU/a9PvNN/LtXFvfkOnpaUkmk1IsFuXh4UFeXl70STuR
        SOg48/zWv+tYCcckFArJ09OTgp6fn6Xf70u325VeryeDwUBGo5E8Pj7K8vKyhF7nv2V4GgBt21bYcDhU
        EOp0OtJut1WtVks3NBtYliWhFS/YeUkkN2V1dVWBxpmBATIwhMv7+3uNAziO15O2A3agZMRkHLphBoKA
        IIB3d3fSbDa1Xa/XNWMP1P6R0fBxCZCyyBLRNhBEm42Zw4ZXV1e6eSwWE2szrWCFzs0vysXFhU5kArDx
        8XEVfbi+vb3VJ20zRky1Wk0dHx0dydz8t9/QmZnPWh5AE4FZaMCMuYGIPC8vL1XValU+vXIc6OTkRz0Y
        SmHQlOkG4PJt+/r6WvL5vLpkLRyPU0AMVCoVKZfLcnNz8w7kBzw8PJTj42Nd43FKpmdnZwomW27N+fm5
        LqRsN5A2mwM8ODiQ3d1dXcP71zlXppx+PB7XCIAXCgU5PT2Vk5MT53QBctocDOXu7+/Lzs6ObG9v6ycV
        Doe9p4/4zhqNhrMI5XI5FTlzgByIcbe1tSXZbFZNlEolmZqaUqAHurZu6c3ADS5xgvb29lSAjLNMJiPp
        dFrHiSgQCEjc9XNxoIi7z5+Jj53gcWMcIUCpVEpFRERDbH+8+0aAg8GglspHzaHhFBBOKRcYmy4tLf39
        L2VEKWQUjUa1RDIDxCkTQyQS0XF3yW6963Dru5XSq8d3zJ+fJ236/eYb+Xb+m0ZjvwByXfq7f9VcvgAA
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="ExpanderUp" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABUAAAAVCAYAAACpF6WWAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7CAAAOwgEVKEqAAAAChElE
        QVQ4T62UW08aURSFTf+Sf5NYTWrte8UaNAFRCAKpg00oeEUBUROREC4KBhDBC2B2/XZypjM4TR/ah5WZ
        c/vO2mvOnJnJh8l/l2en0U7qp/hXVmVp6Yv4fD590qbfa76RZ+d2fEcWFhYkmUzK1dWV9Ho9eX191Sft
        RCKh48zzWv+uYyMclVAoJP1+X0Hj8Vien5/l8fFRnp6e5OXlRSaTidzf30swGJTQ2/xphqsBMJVKKWw0
        GikIDYdDGQwGqoeHB93QbGBZloQ23GD7JZHclc3NTQUaZwYGyMAQLrvdrsYBHMfxZMoG21AyYjIOnTDj
        ihjYCBDATqcj7XZb27e3t5qxC5r6kdXwcWmAxhFtNpqdnbU3BHh3dyetVkuazaZuHo1GxdrNKFihy/5V
        KZfLmpFxhwMA9AE0os2muLy5uZFGo6HvhUJBlv3ffkMXFz+rK4AmLy+gE8zGAGu1mqper8unN44NnZv7
        qHlRCoOUB9QJwt10G6fFYlFdshaOyykgBqrVqieQ/KbBuD09PZWzszOpVCpup2R6eXmpYLJ1LiYSHF1c
        XOiTthkjqqOjI11zcnIiX5cdmfL1Y7GYRgDcLEa4L5VK6gaRo/mQVHVwcKBHKhwOu78+4pxRIovICOXz
        eVuUiXCEu/39fdnb21MT19fXMj8/r0AXdDtu6Z+Bi/Pzc8nlcqrj42MVoMPDQ3WWzWYlk8noOFWtra1J
        zHG52FDEv8/NxJEieNwYRwhQOp1WkTHRENsf/30jwOvr63r2ONRcdTgFhFPKBcamgUDg77eUEaWQUSQS
        0RLJDBBfmRi2trZ03FmyU+86nPpupfXX4xxz8/OkTb/XfCPPzn/TZOYXydn7rlFuH9wAAAAASUVORK5C
        YII=
</value>
  </data>
</root>