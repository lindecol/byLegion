//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ControlPaqueteNet.WsPackage {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsPackage.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AnularConteo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AnularConteo(string strConnection, int Conteo, int MotivoAnulacion, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AnularConteo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AnularConteoAsync(string strConnection, int Conteo, int MotivoAnulacion, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AbrirConteo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AbrirConteo(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AbrirConteo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AbrirConteoAsync(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BloquearConteo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BloquearConteo(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BloquearConteo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BloquearConteoAsync(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BloquearRegistroConteo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string BloquearRegistroConteo(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal, string Tarea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BloquearRegistroConteo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> BloquearRegistroConteoAsync(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal, string Tarea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CerrarConteo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CerrarConteo(string strConnection, int Conteo, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CerrarConteo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CerrarConteoAsync(string strConnection, int Conteo, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearCierre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearCierre(string strConnection, int CodigoGrupo, int CodigoEmpresa, int Encargado, string Estado, string Tarea, string Sucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearCierre", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearCierreAsync(string strConnection, int CodigoGrupo, int CodigoEmpresa, int Encargado, string Estado, string Tarea, string Sucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarFestivos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarFestivos(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarFestivos", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarFestivosAsync(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerarFestivos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GenerarFestivos(string strConnection, bool esFestivoSabado, bool chkSabado, bool esFestivoDomingo, bool chkDomingo, int Sucursal, string Usuario, System.DateTime[] Fechas, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GenerarFestivos", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GenerarFestivosAsync(string strConnection, bool esFestivoSabado, bool chkSabado, bool esFestivoDomingo, bool chkDomingo, int Sucursal, string Usuario, System.DateTime[] Fechas, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CargarMotivosDiferencias", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CargarMotivosDiferencias(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CargarMotivosDiferencias", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CargarMotivosDiferenciasAsync(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarDiferencias", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarDiferencias(string strConnection, int Conteo, string Usuario, string Tipo, string Propiedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarDiferencias", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarDiferenciasAsync(string strConnection, int Conteo, string Usuario, string Tipo, string Propiedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarDiferenciaActivos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertarDiferenciaActivos(string strConnection, string Usuario, System.Data.DataSet ds1, System.Data.DataSet ds2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarDiferenciaActivos", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertarDiferenciaActivosAsync(string strConnection, string Usuario, System.Data.DataSet ds1, System.Data.DataSet ds2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarDiferenciaProductos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertarDiferenciaProductos(string strConnection, string Usuario, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarDiferenciaProductos", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertarDiferenciaProductosAsync(string strConnection, string Usuario, System.Data.DataSet ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarDiferenciaMixto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertarDiferenciaMixto(string strConnection, string Usuario, System.Data.DataSet ds1, System.Data.DataSet ds2, System.Data.DataSet ds3, System.Data.DataSet ds4);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarDiferenciaMixto", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertarDiferenciaMixtoAsync(string strConnection, string Usuario, System.Data.DataSet ds1, System.Data.DataSet ds2, System.Data.DataSet ds3, System.Data.DataSet ds4);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarConteo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ConsultarConteo(string strConnection, int CodigoConteo, string Serial, string Tarea, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarConteo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ConsultarConteoAsync(string strConnection, int CodigoConteo, string Serial, string Tarea, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearEtiqueta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearEtiqueta(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearEtiqueta", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearEtiquetaAsync(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarEtiqueta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertarEtiqueta(string strConnection, int Longitud, string TipoEtiqueta, string Descripcion, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarEtiqueta", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertarEtiquetaAsync(string strConnection, int Longitud, string TipoEtiqueta, string Descripcion, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarEtiqueta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ActualizarEtiqueta(string strConnection, int Longitud, string TipoEtiqueta, string Descripcion, string Estado, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarEtiqueta", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ActualizarEtiquetaAsync(string strConnection, int Longitud, string TipoEtiqueta, string Descripcion, string Estado, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CargarMotivoAnulacion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CargarMotivoAnulacion(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CargarMotivoAnulacion", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CargarMotivoAnulacionAsync(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearMotivoAnulacion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearMotivoAnulacion(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearMotivoAnulacion", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearMotivoAnulacionAsync(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarMotivoAnulacion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertarMotivoAnulacion(string strConnection, string Descripcion, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarMotivoAnulacion", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertarMotivoAnulacionAsync(string strConnection, string Descripcion, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarMotivoAnulacion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ActualizarMotivoAnulacion(string strConnection, int CodigoAnulacion, string Descripcion, string Estado, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarMotivoAnulacion", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ActualizarMotivoAnulacionAsync(string strConnection, int CodigoAnulacion, string Descripcion, string Estado, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearMotivoDiferencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearMotivoDiferencia(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearMotivoDiferencia", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearMotivoDiferenciaAsync(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarMotivoDiferencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertarMotivoDiferencia(string strConnection, string Descripcion, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarMotivoDiferencia", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertarMotivoDiferenciaAsync(string strConnection, string Descripcion, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarMotivoDiferencia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ActualizarMotivoDiferencia(string strConnection, int CodigoDiferencia, string Descripcion, string Estado, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarMotivoDiferencia", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ActualizarMotivoDiferenciaAsync(string strConnection, int CodigoDiferencia, string Descripcion, string Estado, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearProgramacion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearProgramacion(string strConnection, string EstadoConteo, int CodigoGrupo, int CodigoEmpresa, int Encargado, string Sucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearProgramacion", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearProgramacionAsync(string strConnection, string EstadoConteo, int CodigoGrupo, int CodigoEmpresa, int Encargado, string Sucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerUsuarios", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerUsuarios(string strConnection, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerUsuarios", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerUsuariosAsync(string strConnection, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProgramarConteo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ProgramarConteo(string strConnection, System.DateTime[] lstFechas, string HoraInicio, string HoraFin, string TipoConteo, int Encargado, bool EnviaCorreo, bool ConFestivos, string Periodicidad, string Usuario, System.Data.DataSet ds, string[] lstSucursales, bool Confirmacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProgramarConteo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ProgramarConteoAsync(string strConnection, System.DateTime[] lstFechas, string HoraInicio, string HoraFin, string TipoConteo, int Encargado, bool EnviaCorreo, bool ConFestivos, string Periodicidad, string Usuario, System.Data.DataSet ds, string[] lstSucursales, bool Confirmacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerSectorSubdeposito", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ObtenerSectorSubdeposito(string strConnection, int CodigoGrupo, int CodigoEmpresa, int CodigoSucursal, int CodigoSubdeposito);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerSectorSubdeposito", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ObtenerSectorSubdepositoAsync(string strConnection, int CodigoGrupo, int CodigoEmpresa, int CodigoSucursal, int CodigoSubdeposito);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerConteos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerConteos(string strConnection, int CodigoConteo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerConteos", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerConteosAsync(string strConnection, int CodigoConteo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UltimoConteo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int UltimoConteo(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UltimoConteo", ReplyAction="*")]
        System.Threading.Tasks.Task<int> UltimoConteoAsync(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GuardarActivosPocket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GuardarActivosPocket(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, long CodigoActivo, int Cantidad, string Propiedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GuardarActivosPocket", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GuardarActivosPocketAsync(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, long CodigoActivo, int Cantidad, string Propiedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CargarActivoCapacidad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CargarActivoCapacidad(string strConnection, int CodigoActivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CargarActivoCapacidad", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CargarActivoCapacidadAsync(string strConnection, int CodigoActivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearActivos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearActivos(string strConnection, int Conteo, string TipoActivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearActivos", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearActivosAsync(string strConnection, int Conteo, string TipoActivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearActivosGrilla", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearActivosGrilla(string strConnection, int CodigoConteo, string TipoActivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearActivosGrilla", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearActivosGrillaAsync(string strConnection, int CodigoConteo, string TipoActivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NombreActivo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string NombreActivo(string strConnection, int Codigo, string Propiedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NombreActivo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> NombreActivoAsync(string strConnection, int Codigo, string Propiedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GuardarActivos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GuardarActivos(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, System.Data.DataSet dtAjenos, System.Data.DataSet dtPropios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GuardarActivos", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GuardarActivosAsync(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, System.Data.DataSet dtAjenos, System.Data.DataSet dtPropios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GuardarProductosPocket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GuardarProductosPocket(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, long CodigoProducto, int Cantidad, double Capacidad, string Usuario, string Propiedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GuardarProductosPocket", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GuardarProductosPocketAsync(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, long CodigoProducto, int Cantidad, double Capacidad, string Usuario, string Propiedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GuardarProductos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GuardarProductos(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, System.Data.DataSet dtProducto, System.Data.DataSet dtProductoPart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GuardarProductos", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GuardarProductosAsync(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, System.Data.DataSet dtProducto, System.Data.DataSet dtProductoPart);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearProductosCombo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearProductosCombo(string strConnection, int Conteo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearProductosCombo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearProductosComboAsync(string strConnection, int Conteo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearProductosGrilla", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearProductosGrilla(string strConnection, int Conteo, string Propiedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearProductosGrilla", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearProductosGrillaAsync(string strConnection, int Conteo, string Propiedad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CapacidadesProducto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CapacidadesProducto(string strConnection, int Conteo, int CodigoProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CapacidadesProducto", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CapacidadesProductoAsync(string strConnection, int Conteo, int CodigoProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NombreProducto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string NombreProducto(string strConnection, int Conteo, int CodigoProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NombreProducto", ReplyAction="*")]
        System.Threading.Tasks.Task<string> NombreProductoAsync(string strConnection, int Conteo, int CodigoProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GuardarMixto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GuardarMixto(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, System.Data.DataSet dtProducto, System.Data.DataSet dtAjenos, System.Data.DataSet dtPropios, System.Data.DataSet dtProductoAjeno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GuardarMixto", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GuardarMixtoAsync(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, System.Data.DataSet dtProducto, System.Data.DataSet dtAjenos, System.Data.DataSet dtPropios, System.Data.DataSet dtProductoAjeno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IndicadorCuentaCorriente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IndicadorCuentaCorriente(string strConnection, int CodigoProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IndicadorCuentaCorriente", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IndicadorCuentaCorrienteAsync(string strConnection, int CodigoProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReprogramarConteo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ReprogramarConteo(string strConnection, int CodigoConteo, System.DateTime FechaInicio, string HoraInicio, string HoraFin, string TipoConteo, int Encargado, string Usuario, System.Data.DataSet dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReprogramarConteo", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ReprogramarConteoAsync(string strConnection, int CodigoConteo, System.DateTime FechaInicio, string HoraInicio, string HoraFin, string TipoConteo, int Encargado, string Usuario, System.Data.DataSet dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDatosConteo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerDatosConteo(string strConnection, int CodigoConteo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerDatosConteo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDatosConteoAsync(string strConnection, int CodigoConteo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerSubdepositosConteo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ObtenerSubdepositosConteo(string strConnection, int CodigoConteo, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ObtenerSubdepositosConteo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerSubdepositosConteoAsync(string strConnection, int CodigoConteo, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CargarSectores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CargarSectores(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CargarSectores", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CargarSectoresAsync(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sectores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Sectores(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sectores", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SectoresAsync(string strConnection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearSectores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearSectores(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearSectores", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearSectoresAsync(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearSectoresSubdepositos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearSectoresSubdepositos(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearSectoresSubdepositos", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearSectoresSubdepositosAsync(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarSectores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertarSectores(string strConnection, string CodigoSector, string Descripcion, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarSectores", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertarSectoresAsync(string strConnection, string CodigoSector, string Descripcion, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarSectores", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ActualizarSectores(string strConnection, string CodigoSector, string Estado, string Descripcion, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarSectores", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ActualizarSectoresAsync(string strConnection, string CodigoSector, string Estado, string Descripcion, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarSubdepositos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarSubdepositos(string strConnection, int CodigoGrupo, int CodigoEmpresa, int CodigoSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarSubdepositos", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarSubdepositosAsync(string strConnection, int CodigoGrupo, int CodigoEmpresa, int CodigoSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarSubdepositosConfigurados", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarSubdepositosConfigurados(string strConnection, int CodigoGrupo, int CodigoEmpresa, int CodigoSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarSubdepositosConfigurados", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarSubdepositosConfiguradosAsync(string strConnection, int CodigoGrupo, int CodigoEmpresa, int CodigoSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearSubdepositoSector", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearSubdepositoSector(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa, string Sector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearSubdepositoSector", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearSubdepositoSectorAsync(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa, string Sector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarSubdepositoSector", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string EliminarSubdepositoSector(string strConnection, int Sucursal, string Sector, int Secuencia, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarSubdepositoSector", ReplyAction="*")]
        System.Threading.Tasks.Task<string> EliminarSubdepositoSectorAsync(string strConnection, int Sucursal, string Sector, int Secuencia, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarSubdepositoSector", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertarSubdepositoSector(string strConnection, int Sucursal, string Sector, int Subdeposito, int CodigoGrupo, int CodigoEmpresa, string Usuario, int ControlaPapeleria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarSubdepositoSector", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertarSubdepositoSectorAsync(string strConnection, int Sucursal, string Sector, int Subdeposito, int CodigoGrupo, int CodigoEmpresa, string Usuario, int ControlaPapeleria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarSucursales", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarSucursales(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarSucursales", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ConsultarSucursalesAsync(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearSectorSucursal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearSectorSucursal(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearSectorSucursal", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearSectorSucursalAsync(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearSucursal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CrearSucursal(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CrearSucursal", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CrearSucursalAsync(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarSucursal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string EliminarSucursal(string strConnection, int Sucursal, string Sector, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminarSucursal", ReplyAction="*")]
        System.Threading.Tasks.Task<string> EliminarSucursalAsync(string strConnection, int Sucursal, string Sector, int CodigoGrupo, int CodigoEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarSucursal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string InsertarSucursal(string strConnection, int Sucursal, string Sector, int CodigoGrupo, int CodigoEmpresa, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertarSucursal", ReplyAction="*")]
        System.Threading.Tasks.Task<string> InsertarSucursalAsync(string strConnection, int Sucursal, string Sector, int CodigoGrupo, int CodigoEmpresa, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RutasNoRendidas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet RutasNoRendidas(string strConnection, int pGrupo, int pEmpid, string pAgencia, int pIdConteo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RutasNoRendidas", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> RutasNoRendidasAsync(string strConnection, int pGrupo, int pEmpid, string pAgencia, int pIdConteo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PapeleriaNoDigitada", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet PapeleriaNoDigitada(string strConnection, int pGrupo, int pEmpid, string pAgencia, int pIdConteo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PapeleriaNoDigitada", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> PapeleriaNoDigitadaAsync(string strConnection, int pGrupo, int pEmpid, string pAgencia, int pIdConteo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CerrarPapeleria", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void CerrarPapeleria(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal, System.Data.DataTable dtRutas, System.Data.DataTable dtPapeleria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CerrarPapeleria", ReplyAction="*")]
        System.Threading.Tasks.Task CerrarPapeleriaAsync(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal, System.Data.DataTable dtRutas, System.Data.DataTable dtPapeleria);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : ControlPaqueteNet.WsPackage.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<ControlPaqueteNet.WsPackage.ServiceSoap>, ControlPaqueteNet.WsPackage.ServiceSoap {
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public string AnularConteo(string strConnection, int Conteo, int MotivoAnulacion, string Usuario) {
            return base.Channel.AnularConteo(strConnection, Conteo, MotivoAnulacion, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> AnularConteoAsync(string strConnection, int Conteo, int MotivoAnulacion, string Usuario) {
            return base.Channel.AnularConteoAsync(strConnection, Conteo, MotivoAnulacion, Usuario);
        }
        
        public string AbrirConteo(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal) {
            return base.Channel.AbrirConteo(strConnection, Conteo, Usuario, CodigoGrupo, CodigoEmpresa, CodigoSucursal);
        }
        
        public System.Threading.Tasks.Task<string> AbrirConteoAsync(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal) {
            return base.Channel.AbrirConteoAsync(strConnection, Conteo, Usuario, CodigoGrupo, CodigoEmpresa, CodigoSucursal);
        }
        
        public string BloquearConteo(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal) {
            return base.Channel.BloquearConteo(strConnection, Conteo, Usuario, CodigoGrupo, CodigoEmpresa, CodigoSucursal);
        }
        
        public System.Threading.Tasks.Task<string> BloquearConteoAsync(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal) {
            return base.Channel.BloquearConteoAsync(strConnection, Conteo, Usuario, CodigoGrupo, CodigoEmpresa, CodigoSucursal);
        }
        
        public string BloquearRegistroConteo(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal, string Tarea) {
            return base.Channel.BloquearRegistroConteo(strConnection, Conteo, Usuario, CodigoGrupo, CodigoEmpresa, CodigoSucursal, Tarea);
        }
        
        public System.Threading.Tasks.Task<string> BloquearRegistroConteoAsync(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal, string Tarea) {
            return base.Channel.BloquearRegistroConteoAsync(strConnection, Conteo, Usuario, CodigoGrupo, CodigoEmpresa, CodigoSucursal, Tarea);
        }
        
        public string CerrarConteo(string strConnection, int Conteo, string Usuario) {
            return base.Channel.CerrarConteo(strConnection, Conteo, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> CerrarConteoAsync(string strConnection, int Conteo, string Usuario) {
            return base.Channel.CerrarConteoAsync(strConnection, Conteo, Usuario);
        }
        
        public System.Data.DataSet CrearCierre(string strConnection, int CodigoGrupo, int CodigoEmpresa, int Encargado, string Estado, string Tarea, string Sucursal) {
            return base.Channel.CrearCierre(strConnection, CodigoGrupo, CodigoEmpresa, Encargado, Estado, Tarea, Sucursal);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearCierreAsync(string strConnection, int CodigoGrupo, int CodigoEmpresa, int Encargado, string Estado, string Tarea, string Sucursal) {
            return base.Channel.CrearCierreAsync(strConnection, CodigoGrupo, CodigoEmpresa, Encargado, Estado, Tarea, Sucursal);
        }
        
        public System.Data.DataSet ConsultarFestivos(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.ConsultarFestivos(strConnection, Sucursal, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarFestivosAsync(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.ConsultarFestivosAsync(strConnection, Sucursal, CodigoGrupo, CodigoEmpresa);
        }
        
        public string GenerarFestivos(string strConnection, bool esFestivoSabado, bool chkSabado, bool esFestivoDomingo, bool chkDomingo, int Sucursal, string Usuario, System.DateTime[] Fechas, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.GenerarFestivos(strConnection, esFestivoSabado, chkSabado, esFestivoDomingo, chkDomingo, Sucursal, Usuario, Fechas, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Threading.Tasks.Task<string> GenerarFestivosAsync(string strConnection, bool esFestivoSabado, bool chkSabado, bool esFestivoDomingo, bool chkDomingo, int Sucursal, string Usuario, System.DateTime[] Fechas, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.GenerarFestivosAsync(strConnection, esFestivoSabado, chkSabado, esFestivoDomingo, chkDomingo, Sucursal, Usuario, Fechas, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Data.DataSet CargarMotivosDiferencias(string strConnection) {
            return base.Channel.CargarMotivosDiferencias(strConnection);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CargarMotivosDiferenciasAsync(string strConnection) {
            return base.Channel.CargarMotivosDiferenciasAsync(strConnection);
        }
        
        public System.Data.DataSet ConsultarDiferencias(string strConnection, int Conteo, string Usuario, string Tipo, string Propiedad) {
            return base.Channel.ConsultarDiferencias(strConnection, Conteo, Usuario, Tipo, Propiedad);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarDiferenciasAsync(string strConnection, int Conteo, string Usuario, string Tipo, string Propiedad) {
            return base.Channel.ConsultarDiferenciasAsync(strConnection, Conteo, Usuario, Tipo, Propiedad);
        }
        
        public string InsertarDiferenciaActivos(string strConnection, string Usuario, System.Data.DataSet ds1, System.Data.DataSet ds2) {
            return base.Channel.InsertarDiferenciaActivos(strConnection, Usuario, ds1, ds2);
        }
        
        public System.Threading.Tasks.Task<string> InsertarDiferenciaActivosAsync(string strConnection, string Usuario, System.Data.DataSet ds1, System.Data.DataSet ds2) {
            return base.Channel.InsertarDiferenciaActivosAsync(strConnection, Usuario, ds1, ds2);
        }
        
        public string InsertarDiferenciaProductos(string strConnection, string Usuario, System.Data.DataSet ds) {
            return base.Channel.InsertarDiferenciaProductos(strConnection, Usuario, ds);
        }
        
        public System.Threading.Tasks.Task<string> InsertarDiferenciaProductosAsync(string strConnection, string Usuario, System.Data.DataSet ds) {
            return base.Channel.InsertarDiferenciaProductosAsync(strConnection, Usuario, ds);
        }
        
        public string InsertarDiferenciaMixto(string strConnection, string Usuario, System.Data.DataSet ds1, System.Data.DataSet ds2, System.Data.DataSet ds3, System.Data.DataSet ds4) {
            return base.Channel.InsertarDiferenciaMixto(strConnection, Usuario, ds1, ds2, ds3, ds4);
        }
        
        public System.Threading.Tasks.Task<string> InsertarDiferenciaMixtoAsync(string strConnection, string Usuario, System.Data.DataSet ds1, System.Data.DataSet ds2, System.Data.DataSet ds3, System.Data.DataSet ds4) {
            return base.Channel.InsertarDiferenciaMixtoAsync(strConnection, Usuario, ds1, ds2, ds3, ds4);
        }
        
        public string ConsultarConteo(string strConnection, int CodigoConteo, string Serial, string Tarea, string Usuario) {
            return base.Channel.ConsultarConteo(strConnection, CodigoConteo, Serial, Tarea, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> ConsultarConteoAsync(string strConnection, int CodigoConteo, string Serial, string Tarea, string Usuario) {
            return base.Channel.ConsultarConteoAsync(strConnection, CodigoConteo, Serial, Tarea, Usuario);
        }
        
        public System.Data.DataSet CrearEtiqueta(string strConnection) {
            return base.Channel.CrearEtiqueta(strConnection);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearEtiquetaAsync(string strConnection) {
            return base.Channel.CrearEtiquetaAsync(strConnection);
        }
        
        public string InsertarEtiqueta(string strConnection, int Longitud, string TipoEtiqueta, string Descripcion, string Usuario) {
            return base.Channel.InsertarEtiqueta(strConnection, Longitud, TipoEtiqueta, Descripcion, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> InsertarEtiquetaAsync(string strConnection, int Longitud, string TipoEtiqueta, string Descripcion, string Usuario) {
            return base.Channel.InsertarEtiquetaAsync(strConnection, Longitud, TipoEtiqueta, Descripcion, Usuario);
        }
        
        public string ActualizarEtiqueta(string strConnection, int Longitud, string TipoEtiqueta, string Descripcion, string Estado, string Usuario) {
            return base.Channel.ActualizarEtiqueta(strConnection, Longitud, TipoEtiqueta, Descripcion, Estado, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> ActualizarEtiquetaAsync(string strConnection, int Longitud, string TipoEtiqueta, string Descripcion, string Estado, string Usuario) {
            return base.Channel.ActualizarEtiquetaAsync(strConnection, Longitud, TipoEtiqueta, Descripcion, Estado, Usuario);
        }
        
        public System.Data.DataSet CargarMotivoAnulacion(string strConnection) {
            return base.Channel.CargarMotivoAnulacion(strConnection);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CargarMotivoAnulacionAsync(string strConnection) {
            return base.Channel.CargarMotivoAnulacionAsync(strConnection);
        }
        
        public System.Data.DataSet CrearMotivoAnulacion(string strConnection) {
            return base.Channel.CrearMotivoAnulacion(strConnection);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearMotivoAnulacionAsync(string strConnection) {
            return base.Channel.CrearMotivoAnulacionAsync(strConnection);
        }
        
        public string InsertarMotivoAnulacion(string strConnection, string Descripcion, string Usuario) {
            return base.Channel.InsertarMotivoAnulacion(strConnection, Descripcion, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> InsertarMotivoAnulacionAsync(string strConnection, string Descripcion, string Usuario) {
            return base.Channel.InsertarMotivoAnulacionAsync(strConnection, Descripcion, Usuario);
        }
        
        public string ActualizarMotivoAnulacion(string strConnection, int CodigoAnulacion, string Descripcion, string Estado, string Usuario) {
            return base.Channel.ActualizarMotivoAnulacion(strConnection, CodigoAnulacion, Descripcion, Estado, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> ActualizarMotivoAnulacionAsync(string strConnection, int CodigoAnulacion, string Descripcion, string Estado, string Usuario) {
            return base.Channel.ActualizarMotivoAnulacionAsync(strConnection, CodigoAnulacion, Descripcion, Estado, Usuario);
        }
        
        public System.Data.DataSet CrearMotivoDiferencia(string strConnection) {
            return base.Channel.CrearMotivoDiferencia(strConnection);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearMotivoDiferenciaAsync(string strConnection) {
            return base.Channel.CrearMotivoDiferenciaAsync(strConnection);
        }
        
        public string InsertarMotivoDiferencia(string strConnection, string Descripcion, string Usuario) {
            return base.Channel.InsertarMotivoDiferencia(strConnection, Descripcion, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> InsertarMotivoDiferenciaAsync(string strConnection, string Descripcion, string Usuario) {
            return base.Channel.InsertarMotivoDiferenciaAsync(strConnection, Descripcion, Usuario);
        }
        
        public string ActualizarMotivoDiferencia(string strConnection, int CodigoDiferencia, string Descripcion, string Estado, string Usuario) {
            return base.Channel.ActualizarMotivoDiferencia(strConnection, CodigoDiferencia, Descripcion, Estado, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> ActualizarMotivoDiferenciaAsync(string strConnection, int CodigoDiferencia, string Descripcion, string Estado, string Usuario) {
            return base.Channel.ActualizarMotivoDiferenciaAsync(strConnection, CodigoDiferencia, Descripcion, Estado, Usuario);
        }
        
        public System.Data.DataSet CrearProgramacion(string strConnection, string EstadoConteo, int CodigoGrupo, int CodigoEmpresa, int Encargado, string Sucursal) {
            return base.Channel.CrearProgramacion(strConnection, EstadoConteo, CodigoGrupo, CodigoEmpresa, Encargado, Sucursal);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearProgramacionAsync(string strConnection, string EstadoConteo, int CodigoGrupo, int CodigoEmpresa, int Encargado, string Sucursal) {
            return base.Channel.CrearProgramacionAsync(strConnection, EstadoConteo, CodigoGrupo, CodigoEmpresa, Encargado, Sucursal);
        }
        
        public System.Data.DataSet ObtenerUsuarios(string strConnection, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.ObtenerUsuarios(strConnection, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerUsuariosAsync(string strConnection, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.ObtenerUsuariosAsync(strConnection, CodigoGrupo, CodigoEmpresa);
        }
        
        public string ProgramarConteo(string strConnection, System.DateTime[] lstFechas, string HoraInicio, string HoraFin, string TipoConteo, int Encargado, bool EnviaCorreo, bool ConFestivos, string Periodicidad, string Usuario, System.Data.DataSet ds, string[] lstSucursales, bool Confirmacion) {
            return base.Channel.ProgramarConteo(strConnection, lstFechas, HoraInicio, HoraFin, TipoConteo, Encargado, EnviaCorreo, ConFestivos, Periodicidad, Usuario, ds, lstSucursales, Confirmacion);
        }
        
        public System.Threading.Tasks.Task<string> ProgramarConteoAsync(string strConnection, System.DateTime[] lstFechas, string HoraInicio, string HoraFin, string TipoConteo, int Encargado, bool EnviaCorreo, bool ConFestivos, string Periodicidad, string Usuario, System.Data.DataSet ds, string[] lstSucursales, bool Confirmacion) {
            return base.Channel.ProgramarConteoAsync(strConnection, lstFechas, HoraInicio, HoraFin, TipoConteo, Encargado, EnviaCorreo, ConFestivos, Periodicidad, Usuario, ds, lstSucursales, Confirmacion);
        }
        
        public string ObtenerSectorSubdeposito(string strConnection, int CodigoGrupo, int CodigoEmpresa, int CodigoSucursal, int CodigoSubdeposito) {
            return base.Channel.ObtenerSectorSubdeposito(strConnection, CodigoGrupo, CodigoEmpresa, CodigoSucursal, CodigoSubdeposito);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerSectorSubdepositoAsync(string strConnection, int CodigoGrupo, int CodigoEmpresa, int CodigoSucursal, int CodigoSubdeposito) {
            return base.Channel.ObtenerSectorSubdepositoAsync(strConnection, CodigoGrupo, CodigoEmpresa, CodigoSucursal, CodigoSubdeposito);
        }
        
        public System.Data.DataSet ObtenerConteos(string strConnection, int CodigoConteo) {
            return base.Channel.ObtenerConteos(strConnection, CodigoConteo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerConteosAsync(string strConnection, int CodigoConteo) {
            return base.Channel.ObtenerConteosAsync(strConnection, CodigoConteo);
        }
        
        public int UltimoConteo(string strConnection) {
            return base.Channel.UltimoConteo(strConnection);
        }
        
        public System.Threading.Tasks.Task<int> UltimoConteoAsync(string strConnection) {
            return base.Channel.UltimoConteoAsync(strConnection);
        }
        
        public string GuardarActivosPocket(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, long CodigoActivo, int Cantidad, string Propiedad) {
            return base.Channel.GuardarActivosPocket(strConnection, CodigoConteo, Contenido, TipoDetalle, Usuario, CodigoActivo, Cantidad, Propiedad);
        }
        
        public System.Threading.Tasks.Task<string> GuardarActivosPocketAsync(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, long CodigoActivo, int Cantidad, string Propiedad) {
            return base.Channel.GuardarActivosPocketAsync(strConnection, CodigoConteo, Contenido, TipoDetalle, Usuario, CodigoActivo, Cantidad, Propiedad);
        }
        
        public System.Data.DataSet CargarActivoCapacidad(string strConnection, int CodigoActivo) {
            return base.Channel.CargarActivoCapacidad(strConnection, CodigoActivo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CargarActivoCapacidadAsync(string strConnection, int CodigoActivo) {
            return base.Channel.CargarActivoCapacidadAsync(strConnection, CodigoActivo);
        }
        
        public System.Data.DataSet CrearActivos(string strConnection, int Conteo, string TipoActivo) {
            return base.Channel.CrearActivos(strConnection, Conteo, TipoActivo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearActivosAsync(string strConnection, int Conteo, string TipoActivo) {
            return base.Channel.CrearActivosAsync(strConnection, Conteo, TipoActivo);
        }
        
        public System.Data.DataSet CrearActivosGrilla(string strConnection, int CodigoConteo, string TipoActivo) {
            return base.Channel.CrearActivosGrilla(strConnection, CodigoConteo, TipoActivo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearActivosGrillaAsync(string strConnection, int CodigoConteo, string TipoActivo) {
            return base.Channel.CrearActivosGrillaAsync(strConnection, CodigoConteo, TipoActivo);
        }
        
        public string NombreActivo(string strConnection, int Codigo, string Propiedad) {
            return base.Channel.NombreActivo(strConnection, Codigo, Propiedad);
        }
        
        public System.Threading.Tasks.Task<string> NombreActivoAsync(string strConnection, int Codigo, string Propiedad) {
            return base.Channel.NombreActivoAsync(strConnection, Codigo, Propiedad);
        }
        
        public string GuardarActivos(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, System.Data.DataSet dtAjenos, System.Data.DataSet dtPropios) {
            return base.Channel.GuardarActivos(strConnection, CodigoConteo, Contenido, TipoDetalle, Usuario, dtAjenos, dtPropios);
        }
        
        public System.Threading.Tasks.Task<string> GuardarActivosAsync(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, System.Data.DataSet dtAjenos, System.Data.DataSet dtPropios) {
            return base.Channel.GuardarActivosAsync(strConnection, CodigoConteo, Contenido, TipoDetalle, Usuario, dtAjenos, dtPropios);
        }
        
        public string GuardarProductosPocket(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, long CodigoProducto, int Cantidad, double Capacidad, string Usuario, string Propiedad) {
            return base.Channel.GuardarProductosPocket(strConnection, CodigoConteo, Contenido, TipoDetalle, CodigoProducto, Cantidad, Capacidad, Usuario, Propiedad);
        }
        
        public System.Threading.Tasks.Task<string> GuardarProductosPocketAsync(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, long CodigoProducto, int Cantidad, double Capacidad, string Usuario, string Propiedad) {
            return base.Channel.GuardarProductosPocketAsync(strConnection, CodigoConteo, Contenido, TipoDetalle, CodigoProducto, Cantidad, Capacidad, Usuario, Propiedad);
        }
        
        public string GuardarProductos(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, System.Data.DataSet dtProducto, System.Data.DataSet dtProductoPart) {
            return base.Channel.GuardarProductos(strConnection, CodigoConteo, Contenido, TipoDetalle, Usuario, dtProducto, dtProductoPart);
        }
        
        public System.Threading.Tasks.Task<string> GuardarProductosAsync(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, System.Data.DataSet dtProducto, System.Data.DataSet dtProductoPart) {
            return base.Channel.GuardarProductosAsync(strConnection, CodigoConteo, Contenido, TipoDetalle, Usuario, dtProducto, dtProductoPart);
        }
        
        public System.Data.DataSet CrearProductosCombo(string strConnection, int Conteo) {
            return base.Channel.CrearProductosCombo(strConnection, Conteo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearProductosComboAsync(string strConnection, int Conteo) {
            return base.Channel.CrearProductosComboAsync(strConnection, Conteo);
        }
        
        public System.Data.DataSet CrearProductosGrilla(string strConnection, int Conteo, string Propiedad) {
            return base.Channel.CrearProductosGrilla(strConnection, Conteo, Propiedad);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearProductosGrillaAsync(string strConnection, int Conteo, string Propiedad) {
            return base.Channel.CrearProductosGrillaAsync(strConnection, Conteo, Propiedad);
        }
        
        public System.Data.DataSet CapacidadesProducto(string strConnection, int Conteo, int CodigoProducto) {
            return base.Channel.CapacidadesProducto(strConnection, Conteo, CodigoProducto);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CapacidadesProductoAsync(string strConnection, int Conteo, int CodigoProducto) {
            return base.Channel.CapacidadesProductoAsync(strConnection, Conteo, CodigoProducto);
        }
        
        public string NombreProducto(string strConnection, int Conteo, int CodigoProducto) {
            return base.Channel.NombreProducto(strConnection, Conteo, CodigoProducto);
        }
        
        public System.Threading.Tasks.Task<string> NombreProductoAsync(string strConnection, int Conteo, int CodigoProducto) {
            return base.Channel.NombreProductoAsync(strConnection, Conteo, CodigoProducto);
        }
        
        public string GuardarMixto(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, System.Data.DataSet dtProducto, System.Data.DataSet dtAjenos, System.Data.DataSet dtPropios, System.Data.DataSet dtProductoAjeno) {
            return base.Channel.GuardarMixto(strConnection, CodigoConteo, Contenido, TipoDetalle, Usuario, dtProducto, dtAjenos, dtPropios, dtProductoAjeno);
        }
        
        public System.Threading.Tasks.Task<string> GuardarMixtoAsync(string strConnection, int CodigoConteo, string Contenido, string TipoDetalle, string Usuario, System.Data.DataSet dtProducto, System.Data.DataSet dtAjenos, System.Data.DataSet dtPropios, System.Data.DataSet dtProductoAjeno) {
            return base.Channel.GuardarMixtoAsync(strConnection, CodigoConteo, Contenido, TipoDetalle, Usuario, dtProducto, dtAjenos, dtPropios, dtProductoAjeno);
        }
        
        public string IndicadorCuentaCorriente(string strConnection, int CodigoProducto) {
            return base.Channel.IndicadorCuentaCorriente(strConnection, CodigoProducto);
        }
        
        public System.Threading.Tasks.Task<string> IndicadorCuentaCorrienteAsync(string strConnection, int CodigoProducto) {
            return base.Channel.IndicadorCuentaCorrienteAsync(strConnection, CodigoProducto);
        }
        
        public string ReprogramarConteo(string strConnection, int CodigoConteo, System.DateTime FechaInicio, string HoraInicio, string HoraFin, string TipoConteo, int Encargado, string Usuario, System.Data.DataSet dt) {
            return base.Channel.ReprogramarConteo(strConnection, CodigoConteo, FechaInicio, HoraInicio, HoraFin, TipoConteo, Encargado, Usuario, dt);
        }
        
        public System.Threading.Tasks.Task<string> ReprogramarConteoAsync(string strConnection, int CodigoConteo, System.DateTime FechaInicio, string HoraInicio, string HoraFin, string TipoConteo, int Encargado, string Usuario, System.Data.DataSet dt) {
            return base.Channel.ReprogramarConteoAsync(strConnection, CodigoConteo, FechaInicio, HoraInicio, HoraFin, TipoConteo, Encargado, Usuario, dt);
        }
        
        public System.Data.DataSet ObtenerDatosConteo(string strConnection, int CodigoConteo) {
            return base.Channel.ObtenerDatosConteo(strConnection, CodigoConteo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerDatosConteoAsync(string strConnection, int CodigoConteo) {
            return base.Channel.ObtenerDatosConteoAsync(strConnection, CodigoConteo);
        }
        
        public System.Data.DataSet ObtenerSubdepositosConteo(string strConnection, int CodigoConteo, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.ObtenerSubdepositosConteo(strConnection, CodigoConteo, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerSubdepositosConteoAsync(string strConnection, int CodigoConteo, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.ObtenerSubdepositosConteoAsync(strConnection, CodigoConteo, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Data.DataSet CargarSectores(string strConnection) {
            return base.Channel.CargarSectores(strConnection);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CargarSectoresAsync(string strConnection) {
            return base.Channel.CargarSectoresAsync(strConnection);
        }
        
        public System.Data.DataSet Sectores(string strConnection) {
            return base.Channel.Sectores(strConnection);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SectoresAsync(string strConnection) {
            return base.Channel.SectoresAsync(strConnection);
        }
        
        public System.Data.DataSet CrearSectores(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.CrearSectores(strConnection, Sucursal, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearSectoresAsync(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.CrearSectoresAsync(strConnection, Sucursal, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Data.DataSet CrearSectoresSubdepositos(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.CrearSectoresSubdepositos(strConnection, Sucursal, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearSectoresSubdepositosAsync(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.CrearSectoresSubdepositosAsync(strConnection, Sucursal, CodigoGrupo, CodigoEmpresa);
        }
        
        public string InsertarSectores(string strConnection, string CodigoSector, string Descripcion, string Usuario) {
            return base.Channel.InsertarSectores(strConnection, CodigoSector, Descripcion, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> InsertarSectoresAsync(string strConnection, string CodigoSector, string Descripcion, string Usuario) {
            return base.Channel.InsertarSectoresAsync(strConnection, CodigoSector, Descripcion, Usuario);
        }
        
        public string ActualizarSectores(string strConnection, string CodigoSector, string Estado, string Descripcion, string Usuario) {
            return base.Channel.ActualizarSectores(strConnection, CodigoSector, Estado, Descripcion, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> ActualizarSectoresAsync(string strConnection, string CodigoSector, string Estado, string Descripcion, string Usuario) {
            return base.Channel.ActualizarSectoresAsync(strConnection, CodigoSector, Estado, Descripcion, Usuario);
        }
        
        public System.Data.DataSet ConsultarSubdepositos(string strConnection, int CodigoGrupo, int CodigoEmpresa, int CodigoSucursal) {
            return base.Channel.ConsultarSubdepositos(strConnection, CodigoGrupo, CodigoEmpresa, CodigoSucursal);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarSubdepositosAsync(string strConnection, int CodigoGrupo, int CodigoEmpresa, int CodigoSucursal) {
            return base.Channel.ConsultarSubdepositosAsync(strConnection, CodigoGrupo, CodigoEmpresa, CodigoSucursal);
        }
        
        public System.Data.DataSet ConsultarSubdepositosConfigurados(string strConnection, int CodigoGrupo, int CodigoEmpresa, int CodigoSucursal) {
            return base.Channel.ConsultarSubdepositosConfigurados(strConnection, CodigoGrupo, CodigoEmpresa, CodigoSucursal);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarSubdepositosConfiguradosAsync(string strConnection, int CodigoGrupo, int CodigoEmpresa, int CodigoSucursal) {
            return base.Channel.ConsultarSubdepositosConfiguradosAsync(strConnection, CodigoGrupo, CodigoEmpresa, CodigoSucursal);
        }
        
        public System.Data.DataSet CrearSubdepositoSector(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa, string Sector) {
            return base.Channel.CrearSubdepositoSector(strConnection, Sucursal, CodigoGrupo, CodigoEmpresa, Sector);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearSubdepositoSectorAsync(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa, string Sector) {
            return base.Channel.CrearSubdepositoSectorAsync(strConnection, Sucursal, CodigoGrupo, CodigoEmpresa, Sector);
        }
        
        public string EliminarSubdepositoSector(string strConnection, int Sucursal, string Sector, int Secuencia, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.EliminarSubdepositoSector(strConnection, Sucursal, Sector, Secuencia, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Threading.Tasks.Task<string> EliminarSubdepositoSectorAsync(string strConnection, int Sucursal, string Sector, int Secuencia, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.EliminarSubdepositoSectorAsync(strConnection, Sucursal, Sector, Secuencia, CodigoGrupo, CodigoEmpresa);
        }
        
        public string InsertarSubdepositoSector(string strConnection, int Sucursal, string Sector, int Subdeposito, int CodigoGrupo, int CodigoEmpresa, string Usuario, int ControlaPapeleria) {
            return base.Channel.InsertarSubdepositoSector(strConnection, Sucursal, Sector, Subdeposito, CodigoGrupo, CodigoEmpresa, Usuario, ControlaPapeleria);
        }
        
        public System.Threading.Tasks.Task<string> InsertarSubdepositoSectorAsync(string strConnection, int Sucursal, string Sector, int Subdeposito, int CodigoGrupo, int CodigoEmpresa, string Usuario, int ControlaPapeleria) {
            return base.Channel.InsertarSubdepositoSectorAsync(strConnection, Sucursal, Sector, Subdeposito, CodigoGrupo, CodigoEmpresa, Usuario, ControlaPapeleria);
        }
        
        public System.Data.DataSet ConsultarSucursales(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.ConsultarSucursales(strConnection, Sucursal, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ConsultarSucursalesAsync(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.ConsultarSucursalesAsync(strConnection, Sucursal, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Data.DataSet CrearSectorSucursal(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.CrearSectorSucursal(strConnection, Sucursal, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearSectorSucursalAsync(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.CrearSectorSucursalAsync(strConnection, Sucursal, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Data.DataSet CrearSucursal(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.CrearSucursal(strConnection, Sucursal, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CrearSucursalAsync(string strConnection, int Sucursal, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.CrearSucursalAsync(strConnection, Sucursal, CodigoGrupo, CodigoEmpresa);
        }
        
        public string EliminarSucursal(string strConnection, int Sucursal, string Sector, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.EliminarSucursal(strConnection, Sucursal, Sector, CodigoGrupo, CodigoEmpresa);
        }
        
        public System.Threading.Tasks.Task<string> EliminarSucursalAsync(string strConnection, int Sucursal, string Sector, int CodigoGrupo, int CodigoEmpresa) {
            return base.Channel.EliminarSucursalAsync(strConnection, Sucursal, Sector, CodigoGrupo, CodigoEmpresa);
        }
        
        public string InsertarSucursal(string strConnection, int Sucursal, string Sector, int CodigoGrupo, int CodigoEmpresa, string Usuario) {
            return base.Channel.InsertarSucursal(strConnection, Sucursal, Sector, CodigoGrupo, CodigoEmpresa, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> InsertarSucursalAsync(string strConnection, int Sucursal, string Sector, int CodigoGrupo, int CodigoEmpresa, string Usuario) {
            return base.Channel.InsertarSucursalAsync(strConnection, Sucursal, Sector, CodigoGrupo, CodigoEmpresa, Usuario);
        }
        
        public System.Data.DataSet RutasNoRendidas(string strConnection, int pGrupo, int pEmpid, string pAgencia, int pIdConteo) {
            return base.Channel.RutasNoRendidas(strConnection, pGrupo, pEmpid, pAgencia, pIdConteo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> RutasNoRendidasAsync(string strConnection, int pGrupo, int pEmpid, string pAgencia, int pIdConteo) {
            return base.Channel.RutasNoRendidasAsync(strConnection, pGrupo, pEmpid, pAgencia, pIdConteo);
        }
        
        public System.Data.DataSet PapeleriaNoDigitada(string strConnection, int pGrupo, int pEmpid, string pAgencia, int pIdConteo) {
            return base.Channel.PapeleriaNoDigitada(strConnection, pGrupo, pEmpid, pAgencia, pIdConteo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> PapeleriaNoDigitadaAsync(string strConnection, int pGrupo, int pEmpid, string pAgencia, int pIdConteo) {
            return base.Channel.PapeleriaNoDigitadaAsync(strConnection, pGrupo, pEmpid, pAgencia, pIdConteo);
        }
        
        public void CerrarPapeleria(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal, System.Data.DataTable dtRutas, System.Data.DataTable dtPapeleria) {
            base.Channel.CerrarPapeleria(strConnection, Conteo, Usuario, CodigoGrupo, CodigoEmpresa, CodigoSucursal, dtRutas, dtPapeleria);
        }
        
        public System.Threading.Tasks.Task CerrarPapeleriaAsync(string strConnection, int Conteo, string Usuario, int CodigoGrupo, int CodigoEmpresa, string CodigoSucursal, System.Data.DataTable dtRutas, System.Data.DataTable dtPapeleria) {
            return base.Channel.CerrarPapeleriaAsync(strConnection, Conteo, Usuario, CodigoGrupo, CodigoEmpresa, CodigoSucursal, dtRutas, dtPapeleria);
        }
    }
}
